{
    "contents" : "#' Calculates alpha diversity from multiple species occupancy data\n#'\n#' This function takes a data.frame with multiple presence absence-data from various species in different sites, covariates of each site to calculate occupancy, variables specific to sampling days to calculate probability of detection, and it calculates the alpha diversity for each site.\n#'\n#' @param pres a data.frame where rows are the sites and columns are a series of presence-absence observation from multiple species, every specie needs to have the same number of observations.\n#' @param sitecov a data.frame where every row is a site, and every column is a measurement of that site, such as elevation or slope, this covariates are usually more constant.\n#' @param obscov a list where every element is a data frame with the daily covariates for each site, that is a measurement for each day, such as average temperature of a day, this covariates are usually very .\n#' @param spp the number of species in the pres data.frame\n#' @param form a formula in the format ~ obscov ~ sitcov, the first arguments will be used to calculate probability of detection and the second part the occupancy.\n#' @return A list with the fitted models for each specie and the calculated Alpha diversity for each site.\n#' @details\n#' This function fits the latent abundance mixture model described in Royle and Nichols (2003), to calculate the abundance of every species in each site, the using that abundance it calculates the alpha diversity index for each site based on that abundance.\n#' @examples\n#' data(\"BatOccu\")\n#' data(\"Dailycov\")\n#' data(\"sampling.cov\")\n#' diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))\n#' @seealso \\code{\\link[vegan]{diversity}}\n#' @export\n#' @importFrom vegan diversity\n#' @importFrom unmarked occuRN\n#' @importFrom unmarked unmarkedFrameOccu\n#' @importMethodsFrom unmarked predict\n#'\n\n#' @author Derek Corcoran <derek.corcoran.barrios@gmail.com>\n\ndiversityoccu<- function(pres, sitecov, obscov, spp, form) {\n\n  secuencia <- c(1:spp)*(ncol(pres)/spp)\n  secuencia2<-secuencia-(secuencia[1]-1)\n\n  models <- list()\n  div <- list()\n\n  for(i in 1:length(secuencia)) {\n    models[[i]] <-c(secuencia2[i]:secuencia[i])\n    models[[i]] <- pres[, models[[i]]]\n    models[[i]] <- unmarkedFrameOccu(y = models[[i]], siteCovs = sitecov, obsCovs = obscov)\n    models[[i]] <- occuRN(form, models[[i]])\n    div[[i]] <- predict(models[[i]], type = \"state\", newdata = sitecov)$Predicted\n    div<- as.data.frame(div)\n    h<- diversity(div)\n  }\n\n  result <- list(Covs = sitecov, models = models, Diversity = h)\n  return(result)\n}\n\n# You need the suggested package for this function\nmy_fun <- function(a, b) {\n  if (!requireNamespace(\"pkg\", quietly = TRUE)) {\n    stop(\"Pkg needed for this function to work. Please install it.\",\n         call. = FALSE)\n  }\n}\n\n#' Find the best GLM model explaining the alpha divesity of the species\n#'\n#' This function takes a diversityoccu object and heuristically searches for the\n#' glm that best explains the alpha diversity of the modelled species.\n#'\n#' @param DivOcc is an object returned by the divesityoccu function of this package\n#' @return An object with the best fitted model, the coefficients of that model\n#' and a table with the top 5 fitted models ranked by AICc\n#' @details\n#' This function fits every first order glm possible and ranks them by AICc\n#' @examples\n#' data(\"BatOccu\")\n#' data(\"Dailycov\")\n#' data(\"sampling.cov\")\n#' x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))\n#' model.diversity(x)\n#' @seealso \\code{\\link[DiversityOccupancy]{diversityoccu}}\n#' @export\n#' @importFrom glmulti glmulti\n#' @importFrom glmulti weightable\n#' @author Derek Corcoran <derek.corcoran.barrios@gmail.com>\n\n\nmodel.diversity <- function(DivOcc){\n  A <- cbind(DivOcc$Diversity, DivOcc$Covs)\n  colnames(A)[1]<-\"Diversity\"\n  B <- paste(names(DivOcc$Covs), \"+\")\n  B <- toString(B)\n  B <- gsub(\",\", \" \", B)\n  B <- paste(\"Diversity ~\", B, collapse = \" \")\n  B <- as.formula(substr(B, 1, nchar(B)-1))\n  B <- glm(B, data = A)\n  C <- glmulti(B, level = 1, crit = \"aicc\", confsetsize = 5, plotty = FALSE, method = \"g\")\n  Best.model <- C@formulas[[1]]\n  Table <- weightable(C)\n  d<-summary(glm(Best.model, data = A))\n  result <- list(Best_model = Best.model, Table = Table, coeff = d)\n  return(result)\n}\n",
    "created" : 1452185973157.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "14003395",
    "id" : "F92EE754",
    "lastKnownWriteTime" : 1452261998,
    "path" : "~/Documents/DiversityOccu/R/DiversityOccu.R",
    "project_path" : "R/DiversityOccu.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}