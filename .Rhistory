div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
div[[i]] <- predict(get.models(models[[i]], 1)[[1]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
q<-diversityoccu4(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
diversityoccu4<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
div[[i]] <- predict(get.models(models[[i]], 1)[[1]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
q<-diversityoccu4(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
?get
diversityoccu4<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
q<-diversityoccu4(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
require(devtools)
install_github("slidify", "ramnathv")
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
library(doParallel)
library(parallel)
detectCores()
cores - 1
?registerDoParallel
?foreach
library(unmarked)
library(MuMIn)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
library(doParallel)
library(parallel)
diversityoccu5<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
}
ncores<-detectCores()
ncores<-makeCluster(cores - 1)
registerDoParallel(ncores)
foreach(i=1:length(secuencia))%dopar%{
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
stopCluster(ncores)
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
#dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
s<-diversityoccu5(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
cl <- makeCluster(2)
registerDoParallel(cl)
foreach(i=1:3) %dopar% sqrt(i)
stopCluster(cl)
ncores<-detectCores()
ncores<-makeCluster(cores - 1)
registerDoParallel(ncores)
diversityoccu5<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
}
ncores<-detectCores()
ncores<-makeCluster(ncores - 1)
registerDoParallel(ncores)
foreach(i=1:length(secuencia))%dopar%{
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
stopCluster(ncores)
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
#dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
s<-diversityoccu5(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
library(unmarked)
diversityoccu5<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
}
ncores<-detectCores()
ncores<-makeCluster(ncores - 1)
registerDoParallel(ncores)
foreach(i=1:length(secuencia))%dopar%{
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
stopCluster(ncores)
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
#dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
s<-diversityoccu5(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
library(unmarked)
library(unmarked)
diversityoccu5<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
}
ncores<-detectCores()
ncores<-makeCluster(ncores - 1)
registerDoParallel(ncores)
foreach(i=1:length(secuencia))%dopar%{
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
stopCluster(ncores)
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
#dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
s<-diversityoccu5(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
detach("package:unmarked", unload=TRUE)
library("unmarked", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
?"foreach"
diversityoccu5<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
}
ncores<-detectCores()
ncores<-makeCluster(ncores - 1)
registerDoParallel(ncores)
foreach(i=1:length(secuencia), .packages = "unmarked")%dopar%{
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
stopCluster(ncores)
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
#dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
s<-diversityoccu5(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
library(unmarked)
library(MuMIn)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
library(doParallel)
library(parallel)
diversityoccu5<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
}
ncores<-detectCores()
ncores<-makeCluster(ncores - 1)
registerDoParallel(ncores)
foreach(i=1:length(secuencia), .packages = "unmarked")%dopar%{
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
stopCluster(ncores)
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
#dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
s<-diversityoccu5(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
diversityoccu5<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
}
ncores<-detectCores()
ncores<-makeCluster(ncores - 1)
registerDoParallel(ncores)
foreach(i=1:spp), .packages = "unmarked")%dopar%{
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
stopCluster(ncores)
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
#dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
s<-diversityoccu5(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
library(unmarked)
library(MuMIn)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
##################################################################################
##################################################################################
#######Function version 2
diversityoccu2<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge=FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data <- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
#data is a list of class unmarkedFrames from package unmarked
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
#uses the data list above to fit one model per specie
models[[i]] <- occuRN(form, data[[i]])
#uses de fited models above to predict the abundance in each site
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
colnames(div) = paste("species",c(1:ncol(div)), sep =".")
}
}
else if (dredge==TRUE) {
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
#data is a list of class unmarkedFrames from package unmarked.
# NM: write to the global environment so he data won't be "lost"
data2 <<- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
#uses the data list above to fit one model per specie
models[[i]] <- occuRN(form, data2)
#selects models
# NM: saved this to dredged object rather than overwriting models object
dredged[[i]] <- dredge(models[[i]], data2)
#select the first model
models[[i]] <- get.models(dredged[[i]], 1)[[1]]
#predictions for the best model
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
colnames(div) = paste("species",c(1:ncol(div)), sep =".")
data[[i]] <- data2
}
# remove temporary data file from the global environment
rm(data2, pos=".GlobalEnv")
}
result <- list(Covs = sitecov, models = models, Prediction = div, data=data)
return(result)
}
#when we run the model with dredge = FALSE, all runs smoothly
x<-diversityoccu2(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
#however, when the dredge is = TRUE, I have a problem
z <- diversityoccu2(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
z$models
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
z <- diversityoccu(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
z$Diversity
data("BatOccu")
data("Dailycov")
data("sampling.cov")
z <- diversityoccu(pres = BatOccu[,1:12], sitecov = sampling.cov, obscov = Dailycov,spp = 4, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
z$models
z$models[[1]]
z$models[[2]]
z$models[[1]]
z$models[[2]]
z$models[[3]]
z$models[[4]]
data("BatOccu")
data("Dailycov")
data("sampling.cov")
z <- diversityoccu(pres = BatOccu[,1:30], sitecov = sampling.cov, obscov = Dailycov,spp = 10, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
z$Diversity
hist(z$Diversity)
View(sampling.cov)
z <- diversityoccu(pres = BatOccu[,1:30], sitecov = sampling.cov, obscov = Dailycov,spp = 10, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy + Altitude + Distance.to.road, dredge = TRUE)
hist(z$Diversity)
z$Diversity
z$models
hist(z$Diversity)
