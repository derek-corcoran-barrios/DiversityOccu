layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
#for (i in 1:length(desition)){
# nths <- quantile(desition[i], quantile.nth)
#}
result <- list(species = layers, diversity.raster = diversity.raster, desition = desition)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F))
z$desition
plot(z$desition)
library(raster)
plot(z$desition)
library(rasterVis)
plot3D(z$diversity.raster)
detach("package:rasterVis", unload=TRUE)
z$desition
quantile(z$desition)
quantile(z$desition, 0.9)
quantile(z$desition, 0.9)
p<- unstack(z$desition)
p
class(p)
predict.diversity2<- function(new.data, quantile.nth = 0.5) {
nths <- quantile(new.data, quantile.nth)
new.data <- unstack(new.data)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(new.data[[i]] , rcl = rclmat)
}
rc<- stack(unlist(rc))
priority.area <- prod(rc)
return(priority.area)
}
area<- predict.diversity2(new.data = z$desition, quantile.nth = 0.9)
area
plot(area)
plot(area, colNA = "black", legend = FALSE)
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
nths <- quantile(desition, quantile.nth)
desition <- unstack(desition)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(desition[[i]] , rcl = rclmat)
}
rc<- stack(unlist(rc))
priority.area <- prod(rc)
result <- list(species = layers, diversity.raster = diversity.raster, priority.area = priority.area)
return(result)
}
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
nths <- quantile(desition, quantile.nth)
desition <- unstack(desition)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(desition[[i]] , rcl = rclmat)
}
rc<- stack(unlist(rc))
priority.area <- prod(rc)
result <- list(species = layers, diversity.raster = diversity.raster, priority.area = priority.area)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F))
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
nths <- quantile(desition, quantile.nth)
desition <- unstack(desition)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(desition[[i]] , rcl = rclmat)
}
rc<- stack(unlist(rc))
priority.area <- prod(rc)
result <- list(species = layers, diversity.raster = diversity.raster, priority.area = priority.area)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.95, species = c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F))
z$priority.area
plot(z$priority.area)
plot(z$priority.area, colNA="black")
plot(z$priority.area, colNA="black", legend = FALSE)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(T,F,F,F,T,F,T,F,F,F,F,F,F,F,F,F,F))
plot(z$priority.area, colNA="black", legend = FALSE)
nun <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F))
plot(nun$priority.area, colNA="black", legend = FALSE)
nun <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F))
?addLayer
addLayer
KML(z$priority.area, "priority", col = 'red', colNA= NA, overwrite = TRUE)
?KML
addLayer
KML
addLayer
library(DiversityOccupancy)
z
rm(predict.diversity())
rm(predict.diversity)
rm(predict.diversity2)
nun <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F))
library(DiversityOccupancy)
nun <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F))
a
nun <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = a)
?subset
library(DiversityOccupancy)
library(DiversityOccupancy)
nun <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = a)
predict.diversity2<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
nths <- quantile(desition, quantile.nth)
desition <- unstack(desition)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(desition[[i]] , rcl = rclmat)
}
predict.diversity2<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
nths <- quantile(desition, quantile.nth)
desition <- unstack(desition)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(desition[[i]] , rcl = rclmat)
}
library(unmarked)
library(raster)
predict.diversity2<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
nths <- quantile(desition, quantile.nth)
desition <- unstack(desition)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(desition[[i]] , rcl = rclmat)
}
rc<- stack(unlist(rc))
priority.area <- prod(rc)
plot(priority.area, colNA="black", legend = FALSE)
result <- list(species = layers, diversity.raster = diversity.raster, priority.area = priority.area)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(T,F,F,F,T,F,T,F,F,F,F,F,F,F,F,F,F))
z <- predict.diversity2(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(T,F,F,F,T,F,T,F,F,F,F,F,F,F,F,F,F))
library(DiversityOccupancy)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F))
library(DiversityOccupancy)
library(DiversityOccupancy)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F))
?subset
subset.raster
library(DiversityOccupancy)
library(DiversityOccupancy)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F))
?KML
library(DiversityOccupancy)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F))
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
bats<-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
data("BatOccu")
data("Dailycov")
data("sampling.cov")
(system.tyme(bats<-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2), dredge = FALSE))
)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
system.time(bats<-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2), dredge = FALSE))
bats
names(bats)
bats$models[[1]]
summary(bats$models[[1]])
print(bats$models[[1]])
library(stargazer)
?"stargazer"
stargazer(bats$models[[1]], type = "text")
uno <- bats$models[[1]]
stargazer(uno, type = "text")
uno
stargazer(uno, type = "text")
library(texreg)
screenreg(uno)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
system.time(bats2<-batchoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2), dredge = FALSE))
screenreg(bats2$models[[1]])
uno
names(uno)
uno$state
uno@state
slot(uno)
slots(uno)
names(uno)
uno@det
uno
uno@detection
uno@fitType
uno@call
uno@formula
uno@estimates
uno@estimates@detection
class(uno@estimates)
names(uno@estimates)
uno@estimates@estimates
uno@opt
uno@covMatBS
uno@negLogLike
uno@bootstrapSamples
uno@nllFun()
?class
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
bats<- diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2))
class(bats)
?class
class(bats) <- "diversityoccupancy"
class(bats)
library(DiversityOccupancy)
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
bats<- diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2))
class(bats)
bats$Diversity
hist(bats$Diversity)
library(DiversityOccupancy)
plot(bats)
plot(bats)
class(bats)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
bats<- diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meantemp +sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2))
library(DiversityOccupancy)
?plot
plot(bats)
bats
class(bats)
plot?
bjhbj
?plot
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
plot (x)
x$Covs
x$models
x$Diversity
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
y <- model.diversity(x, method = "g")
plot(y, Burn.intensity.soil)
plot(y, Existing.vegetation)
plot(y, Existing.vegetation)
k<- plot(y, Existing.vegetation)
k + ylim(c(0,2.5))
library(ggplot2)
k + ylim(c(0,2.5))
k + ylim(c(1,2.5))
k + ylim(c(1.5,2.5))
k + ylim(c(2,2.5))
k
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
y <- model.diversity(x, method = "g")
plot(y, Burn.intensity.soil)
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
x$species
View(x$species)
library(DiversityOccupancy)
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
View(x$species)
pairs(x$species)
summary(x$species)
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
summary(x)
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
class(x)
library(DiversityOccupancy)
summary(x)
class(summary(x))
knitr::kable(summary(x))
y
y$Table
y$Table
y$Table
y$Best_model
y$coeff
y$dataset
class(y)
library(texreg)
screenreg(y$Table)
screenreg(y$Table)
y$Table
class(y)
class(y)
library(DiversityOccupancy)
y
class(y)
y$Best_model
plot(y "Burn.intensity.Canopy")
plot(y Burn.intensity.Canopy)
plot(y, Burn.intensity.Canopy)
data("Daily_Cov")
data("IslandBirds")
names(Daily_Cov)
names(siteCov)
library(DiversityOccupancy)
Birdmodel <- diversityoccu(pres = IslandBirds, sitecov = siteCov, obscov =
Daily_Cov, spp = 13, form = ~ Day + Wind + Noise ~ Elev + I(Elev^2) + Patches
+ PD + Wetland, dredge = FALSE)
Birdmodel <- diversityoccu(pres = IslandBirds, sitecov = siteCov, obscov =
Daily_Cov, spp = 13, form = ~ Day + Noise ~ Elev + I(Elev^2) + Patches
+ PD + Wetland, dredge = FALSE)
Birdmodel <- diversityoccu(pres = IslandBirds, sitecov = siteCov, obscov =
Daily_Cov, spp = 13, form = ~ Day + Noise ~ I(Elev^2) + Patches
+ PD + Wetland, dredge = FALSE)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
plot(x)
summary(x)
x$models
x$models
x$species
x$models
library(DiversityOccupancy)
library(DiversityOccupancy)
?model.diversity
BatDiversity <-diversityoccu(pres = BatOccu, sitecov = sampling.cov[,1:8],
obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum +
sdtemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) +
Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
#Select the best model that explains diversity using genetic algorithms
set.seed(123)
glm.Batdiversity <- model.diversity(x, method = "g")
#see the best models
summary(glm.Batdiversity)
plot(glm.Batdiversity, Burn.intensity.soil)
batdiversity2 <-diversityoccu(pres = BatOccu, sitecov = sampling.cov[,1:8],
obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum +
sdtemp ~Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +I(Burn.intensity.basal^2))
setseed(123)
glm.batdiversity2 <- model.diversity(batdiversity2 , method = "g", squared = TRUE)
plot(glm.batdiversity2, burn.intensity.soil)
plot(glm.batdiversity2, Burn.intensity.soil)
plot(glm.batdiversity2, Burn.intensity.Canopy)
data("plumas.stack")
plot(plumas.stack)
View(BatOccu)
names(BatOccu)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
