plot(batch = BatOccupancy, spp = 9, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 10, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 11, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 12, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 13, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 14, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 15, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 16, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 17, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 17, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 1, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 2, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 3, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 5, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 6, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = , variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 7, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 8, variable = Burn.intensity.Canopy)
diversityoccu
library(DiversityOccupancy)
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
BatDiv <-batchoccu(pres = BatDiv, sitecov = sampling.cov[,1:8],
obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum +
sdtemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) +
Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
#plot the response of abundance to individual variables for species 4, 11
and 15
plot(batch = BatDiv, spp = 4, variable = Burn.intensity.soil)
plot(batch = BatDiv, spp = 11, variable = Burn.intensity.soil)
plot(batch = BatDiv, spp = 15, variable = Burn.intensity.soil)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
BatDiv <-batchoccu(pres = BatDiv, sitecov = sampling.cov[,1:8],
obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum +
sdtemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) +
Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
data("BatOccu")
data("Dailycov")
data("sampling.cov")
BatDiv <-batchoccu(pres = BatOccu, sitecov = sampling.cov[,1:8],
obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum +
sdtemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) +
Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
plot(batch = BatDiv, spp = 4, variable = Burn.intensity.soil)
plot(batch = BatDiv, spp = 15, variable = Burn.intensity.soil)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
BatDiv <-diversityoccu(pres = BatOccu, sitecov = sampling.cov[,1:8],
obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum +
sdtemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) +
Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
plot(batch = BatDiv, spp = 15, variable = Burn.intensity.soil)
plot(batch = BatDiv, spp = 2, variable = Burn.intensity.soil)
plot(batch = BatDiv, spp = 8, variable = Burn.intensity.soil)
library(DiversityOccupancy)
?plot.batchoccupancy
data("Dailycov")
data("sampling.cov")
BatOccupancy <-batchoccu(pres = BatOccu, sitecov = sampling.cov[,1:8],
obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum +
sdtemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) +
Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
#plot the response of occupancy to individual variables for species 4, 11
and 15
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 11, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 15, variable = Burn.intensity.soil)
data("Dailycov")
data("sampling.cov")
BatOccupancy <-batchoccu(pres = BatOccu, sitecov = sampling.cov[,1:8],
obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum +
sdtemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) +
Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
#plot the response of occupancy to individual variables for species 4, 11
and 15
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 11, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 117, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 17, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 16, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 15, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 14, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 13, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 12, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 11, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 10, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 9, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 8, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 7, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 6, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 5, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 3, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 2, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 1, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 1, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 2, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 3, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 5, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 6, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 7, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 8, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 9, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 10, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 11, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 12, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 13, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 14, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 15, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 16, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 17, variable = Burn.intensity.Canopy)
plot(batch = BatOccupancy, spp = 17, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 16, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 15, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 14, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 13, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 12, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 11, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 10, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 9, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 8, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 7, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 6, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 5, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 3, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 2, variable = Burn.intensity.basal)
plot(batch = BatOccupancy, spp = 1, variable = Burn.intensity.basal)
library(DiversityOccupancy)
?plot.batchoccupancy
data("BatOccu")
data("Dailycov")
data("sampling.cov")
BatOccupancy <-batchoccu(pres = BatOccu, sitecov = sampling.cov[,1:8],
obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum +
sdtemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) +
Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
#plot the response of occupancy to individual variables for species 4, 11
and 15
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 11, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 15, variable = Burn.intensity.soil)
par(mfrow=(2,1))
par(mfrow=c(2,1))
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 11, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 15, variable = Burn.intensity.soil)
par(mfrow=c(2,1))
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 11, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 15, variable = Burn.intensity.soil)
par(mfrow=c(2,3))
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 11, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 15, variable = Burn.intensity.soil)
batchoccu
library(parallel)
parallelbatch <- function(pres, sitecov, obscov, spp, form, dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
fit <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
models[[i]] <- occu(form, models[[i]])
fit[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
fit <- as.data.frame(fit)
colnames(fit) = paste("species",c(1:ncol(fit)), sep =".")
}
}
else if (dredge==TRUE) {
for(i in 1:length(secuencia)) {
require(MuMIn)
require(unmarked)
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data2 <<- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
models[[i]] <- occu(form, data2)
}
clust <- try(makeCluster(getOption("cl.cores",  (detectCores()-1))))
clusterEvalQ(clust, library(unmarked))
clusterExport(clust, models)
for(i in 1:length(secuencia)) {
dredged[[i]] <- dredge(models[[i]], data2)
models[[i]] <- get.models(dredged[[i]], 1)[[1]]
fit[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
fit<- as.data.frame(fit)
colnames(fit) = paste("species",c(1:ncol(fit)), sep =".")
}
rm(data2, pos=".GlobalEnv")
}
result <- list(Covs = sitecov, models = models, fit = fit)
class(result)<- "batchoccupancy"
return(result)
}
?batchoccu
parallelbatch <- function(pres, sitecov, obscov, spp, form, dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
fit <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
models[[i]] <- occu(form, models[[i]])
fit[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
fit <- as.data.frame(fit)
colnames(fit) = paste("species",c(1:ncol(fit)), sep =".")
}
}
else if (dredge==TRUE) {
for(i in 1:length(secuencia)) {
require(MuMIn)
require(unmarked)
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data2 <<- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
models[[i]] <- occu(form, data2)
}
clust <- try(makeCluster(getOption("cl.cores",  (detectCores()-1))))
clusterEvalQ(clust, library(DiversityOccupancy))
clusterExport(clust, models)
for(i in 1:length(secuencia)) {
dredged[[i]] <- dredge(models[[i]], data2)
models[[i]] <- get.models(dredged[[i]], 1)[[1]]
fit[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
fit<- as.data.frame(fit)
colnames(fit) = paste("species",c(1:ncol(fit)), sep =".")
}
rm(data2, pos=".GlobalEnv")
}
result <- list(Covs = sitecov, models = models, fit = fit)
class(result)<- "batchoccupancy"
return(result)
}
library(parallel)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
a<- system.time(BatOccupancy <-batchoccu(pres = BatOccu, sitecov = sampling.cov[,1:8], obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp ~ Burn.intensity.soil + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2), dredge = TRUE))
b<- system.time(BatOccupancy <-parallelbatch(pres = BatOccu, sitecov = sampling.cov[,1:8], obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp ~ Burn.intensity.soil + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2), dredge = TRUE))
clust <- try(makeCluster(getOption("cl.cores",  (detectCores()-1))))
clusterEvalQ(clust, library(DiversityOccupancy))
parallelbatch <- function(pres, sitecov, obscov, spp, form, dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
fit <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
models[[i]] <- occu(form, models[[i]])
fit[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
fit <- as.data.frame(fit)
colnames(fit) = paste("species",c(1:ncol(fit)), sep =".")
}
}
else if (dredge==TRUE) {
for(i in 1:length(secuencia)) {
require(MuMIn)
require(unmarked)
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data2 <<- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
models[[i]] <- occu(form, data2)
}
clust <- try(makeCluster(getOption("cl.cores",  (detectCores()-1))))
clusterEvalQ(clust, library(DiversityOccupancy))
clusterExport(clust, models)
for(i in 1:length(secuencia)) {
dredged[[i]] <- pdredge(models[[i]], data2)
models[[i]] <- get.models(dredged[[i]], 1)[[1]]
fit[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
fit<- as.data.frame(fit)
colnames(fit) = paste("species",c(1:ncol(fit)), sep =".")
}
rm(data2, pos=".GlobalEnv")
}
result <- list(Covs = sitecov, models = models, fit = fit)
class(result)<- "batchoccupancy"
return(result)
}
b<- system.time(BatOccupancy <-parallelbatch(pres = BatOccu, sitecov = sampling.cov[,1:8], obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp ~ Burn.intensity.soil + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2), dredge = TRUE))
b<- system.time(BatOccupancy2 <-parallelbatch(pres = BatOccu, sitecov = sampling.cov[,1:8], obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp ~ Burn.intensity.soil + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2), dredge = TRUE))
parallelbatch <- function(pres, sitecov, obscov, spp, form, dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
fit <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
models[[i]] <- occu(form, models[[i]])
fit[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
fit <- as.data.frame(fit)
colnames(fit) = paste("species",c(1:ncol(fit)), sep =".")
}
}
else if (dredge==TRUE) {
for(i in 1:length(secuencia)) {
require(MuMIn)
require(unmarked)
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data2 <<- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
models[[i]] <- occu(form, data2)
}
#clust <- try(makeCluster(getOption("cl.cores",  (detectCores()-1))))
#clusterEvalQ(clust, library(DiversityOccupancy))
#clusterExport(clust, models)
#for(i in 1:length(secuencia)) {
#dredged[[i]] <- pdredge(models[[i]], data2)
#models[[i]] <- get.models(dredged[[i]], 1)[[1]]
#fit[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
#fit<- as.data.frame(fit)
#colnames(fit) = paste("species",c(1:ncol(fit)), sep =".")
#}
#rm(data2, pos=".GlobalEnv")
#}
#result <- list(Covs = sitecov, models = models, fit = fit)
#class(result)<- "batchoccupancy"
return(models)
}
}
b<- system.time(BatOccupancy2 <-parallelbatch(pres = BatOccu, sitecov = sampling.cov[,1:8], obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp ~ Burn.intensity.soil + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2), dredge = TRUE))
stopCluster(clust)
b<- system.time(BatOccupancy2 <-parallelbatch(pres = BatOccu, sitecov = sampling.cov[,1:8], obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp ~ Burn.intensity.soil + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2), dredge = TRUE))
b
BatOccupancy2
parallelbatch <- function(pres, sitecov, obscov, spp, form, dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
fit <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
models[[i]] <- occu(form, models[[i]])
fit[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
fit <- as.data.frame(fit)
colnames(fit) = paste("species",c(1:ncol(fit)), sep =".")
}
}
else if (dredge==TRUE) {
for(i in 1:length(secuencia)) {
require(MuMIn)
require(unmarked)
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data2 <<- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
models[[i]] <- occu(form, data2)
}
clust <- try(makeCluster(getOption("cl.cores",  (detectCores()-1))))
clusterEvalQ(clust, library(DiversityOccupancy))
clusterExport(clust, models)
#for(i in 1:length(secuencia)) {
#dredged[[i]] <- pdredge(models[[i]], data2)
#models[[i]] <- get.models(dredged[[i]], 1)[[1]]
#fit[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
#fit<- as.data.frame(fit)
#colnames(fit) = paste("species",c(1:ncol(fit)), sep =".")
#}
#rm(data2, pos=".GlobalEnv")
#}
#result <- list(Covs = sitecov, models = models, fit = fit)
#class(result)<- "batchoccupancy"
stopCluster(clust)
return(models)
}
}
b<- system.time(BatOccupancy2 <-parallelbatch(pres = BatOccu, sitecov = sampling.cov[,1:8], obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp ~ Burn.intensity.soil + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2), dredge = TRUE))
?getOption
?makeCluster
?try
clust <- makeCluster("cl.cores",  (detectCores()-1)
)
clust <- try(makeCluster(getOption("cl.cores",  (detectCores()-1))))
clust <- try(makeCluster(getOption("cl.cores",  (detectCores()-1))))
stopCluster(clust)
library("DiversityOccupancy", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
View(sampling.cov)
View(sampling.cov[,1:8])
sampling.cov <- sampling.cov[,1:8]
devtools::use_data(sampling.cov, overwrite = TRUE)
library(DiversityOccupancy)
data("sampling.cov")
View(sampling.cov)
library(DiversityOccupancy)
?plot.batchoccupancy
names(sampling.cov)
library(DiversityOccupancy)
data("plumas.stack")
summary(plumas.stack)
summary(plumas.stack[8])
plumas.stack[8]
plumas.stack[[8]]
plumas.stack[[7]]
plumas.stack[[6]]
stop_cluster()
data("Dailycov")
names(Dailycov)
?max
?plot.batchoccupancy
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
ata("BatOccu")
data("Dailycov")
data("sampling.cov")
data("plumas.stack")
data("BatOccu")
data("Dailycov")
data("sampling.cov")
data("plumas.stack")
BatDiversity <-diversityoccu(pres = BatOccu, sitecov = sampling.cov,
obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum +
sdtemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) +
Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
plot.modeldiversity
library(DiversityOccupancy)
library(DiversityOccupancy)
help("suppressForeignCheck")
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
BatOccupancy <-batchoccu(pres = BatOccu, sitecov = sampling.cov,
obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum +
sdtemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) +
Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
#plot the response of occupancy to individual variables for species 4, 11
#and 15
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.soil)
library(DiversityOccupancy)
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.soil)
library(DiversityOccupancy)
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.soil)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 11, variable = Burn.intensity.soil)
library(DiversityOccupancy)
plot(batch = BatOccupancy, spp = 11, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 15, variable = Burn.intensity.soil)
library(DiversityOccupancy)
plot(batch = BatOccupancy, spp = 15, variable = Burn.intensity.soil)
?rdname
library(DiversityOccupancy)
library(DiversityOccupancy)
plot(batch = BatOccupancy, spp = 15, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 10, variable = Burn.intensity.soil)
library(DiversityOccupancy)
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.soil)
?UseMethod
library(DiversityOccupancy)
plot(batch = BatOccupancy, spp = 4, variable = Burn.intensity.soil)
plot(batch = BatOccupancy, spp = 1, variable = Burn.intensity.soil)
library(DiversityOccupancy)
plot(batch = BatOccupancy, spp = 1, variable = Burn.intensity.soil)
