panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(siteCov, lower.panel = panel.smooth, upper.panel = panel.cor)
x<-diversityoccu(pres = IslandBirds[,1:8], sitecov = siteCov, obscov = Daily_Cov, spp = 2, dredge = TRUE, form = ~ Day + Wind + Obs + Time + Rain + Noise + Clouds ~ Elev + RPR + AgroFo + SecVeg + Wetland + Upland)
?dredge
x<-diversityoccu(pres = IslandBirds[,1:8], sitecov = siteCov, obscov = Daily_Cov, spp = 2, dredge = TRUE, form = ~ Wind + Time + Rain + Noise + Clouds ~ Elev + RPR + AgroFo + SecVeg + Wetland + Upland)
library(DiversityOccupancy)
data("mtcars")
?mtcars
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
?DDaily_Cov
?mtcars
?Daily_Cov
?"MuMIn"
library(DiversityOccupancy)
?diversityoccu
?"MuMIn"
library(DiversityOccupancy)
?`data.frame-class`
?`data.frame
fsafa
hfkhdflhld
??xg's'
sgasdgy
()
stdagljkdalgpwwhg
?as.data.frame
POLO_OC <- read.csv("~/Desktop/160121_AllData/Occupancy/Observations/POLO_OC.csv")
POLO_OC <- POLO_OC[,-1]
colnames(POLO_OC) <- c("POLO.1", "POLO.2", "POLO.3", "POLO.4")
POFL_OC <- read.csv("~/Desktop/160121_AllData/Occupancy/Observations/POFL_OC.csv")
POFL_OC <- POFL_OC[,-1]
colnames(POFL_OC) <- c("POFL.1", "POFL.2", "POFL.3","POFL.4")
POFA_OC <- read.csv("~/Desktop/160121_AllData/Occupancy/Observations/POFA_OC.csv")
POFA_OC <- POFA_OC[,-1]
colnames(POFA_OC) <- c("POFA.1", "POFA.2", "POFA.3", "POFA.4")
PCFD_OC <- read.csv("~/Desktop/160121_AllData/Occupancy/Observations/PCFD_OC.csv")
PCFD_OC <- PCFD_OC[,-1]
colnames(PCFD_OC) <- c("PCFD.1", "PCFD.2", "PCFD.3", "PCFD.4")
MIST_OC <- read.csv("~/Desktop/160121_AllData/Occupancy/Observations/MIST_OC.csv")
MIST_OC <- MIST_OC[,-1]
colnames(MIST_OC) <- c("MIST.1", "MIST.2", "MIST.3", "MIST.4")
MIPI_OC <- read.csv("~/Desktop/160121_AllData/Occupancy/Observations/MIPI_OC.csv")
MIPI_OC <- MIPI_OC[,-1]
colnames(MIPI_OC) <- c("MIPI.1", "MIPI.2", "MIPI.3", "MIPI.4")
MIKI_OC <- read.csv("~/Desktop/160121_AllData/Occupancy/Observations/MIKI_OC.csv")
MIKI_OC <- MIKI_OC[,-1]
colnames(MIKI_OC) <- c("MIKI.1", "MIKI.2", "MIKI.3", "MIKI.4")
MIHO_OC <- read.csv("~/Desktop/160121_AllData/Occupancy/Observations/MIHO_OC.csv")
MIHO_OC <- MIHO_OC[,-c(1,2)]
colnames(MIHO_OC) <- c("MIHO.1", "MIHO.2", "MIHO.3", "MIHO.4")
LBWE_OC <- read.csv("~/Desktop/160121_AllData/Occupancy/Observations/LBWE_OC.csv")
LBWE_OC <- LBWE_OC[,-1]
colnames(LBWE_OC) <- c("LBWE.1", "LBWE.2", "LBWE.3", "LBWE.4")
GRWE_OC <- read.csv("~/Desktop/160121_AllData/Occupancy/Observations/GRWE_OC.csv")
GRWE_OC <- GRWE_OC[,-1]
colnames(GRWE_OC) <- c("GRWE.1", "GRWE.2", "GRWE.3", "GRWE.4")
CIWE_OC <- read.csv("~/Desktop/160121_AllData/Occupancy/Observations/CIWE_OC.csv")
CIWE_OC <- CIWE_OC[,-1]
colnames(CIWE_OC) <- c("CIWE.1", "CIWE.2", "CIWE.3", "CIWE.4")
CIRW_OC <- read.csv("~/Desktop/160121_AllData/Occupancy/Observations/CIRW_OC.csv")
CIRW_OC <- CIRW_OC[,-1]
colnames(CIRW_OC) <- c("CIRW.1", "CIRW.2", "CIRW.3", "CIRW.4")
CICA_OC <- read.csv("~/Desktop/160121_AllData/Occupancy/Observations/CICA_OC.csv")
CICA_OC <- CICA_OC[,-1]
colnames(CICA_OC) <- c("CICA.1", "CICA.2", "CICA.3", "CICA.4")
IslandBirds<-cbind(CICA_OC, CIRW_OC, CIWE_OC, GRWE_OC, LBWE_OC, MIHO_OC, MIKI_OC, MIPI_OC, MIST_OC, PCFD_OC, POFA_OC, POFL_OC, POLO_OC)
siteCov <- read.csv("~/Desktop/160121_AllData/Occupancy/All_Occupancy/100_VegCov.csv")
siteCov <- siteCov[!is.na(IslandBirds[,4]),]
siteCov <- siteCov[c(2*(1:120)),]
siteCov <- siteCov[,-c(1:3)]
Daily_Cov <- read.csv("~/Desktop/160121_AllData/Occupancy/Det_Cov.csv")
Daily_Cov <- Daily_Cov[!is.na(IslandBirds[,4]),]
Daily_Cov <- Daily_Cov[c(2*(1:120)),]
Daily_Cov <- Daily_Cov[,-c(1:2)]
Day <- Daily_Cov[,1:4]
Wind <- Daily_Cov[,5:8]
Obs <- Daily_Cov[,9:12]
Time <- Daily_Cov[,13:16]
Rain <- Daily_Cov[,17:20]
Noise <- Daily_Cov[,21:24]
Clouds <- Daily_Cov[,25:28]
Daily_Cov <- list(Day, Wind, Obs, Time, Rain, Noise, Clouds)
names(Daily_Cov) <- c("Day", "Wind", "Obs", "Time", "Rain", "Noise", "Clouds")
IslandBirds<-IslandBirds[!is.na(IslandBirds[,4]),]
IslandBirds <- IslandBirds[c(2*(1:120)),]
rownames(IslandBirds)<- NULL
rownames(siteCov)<- NULL
devtools::use_data(IslandBirds, overwrite = TRUE)
devtools::use_data(siteCov, overwrite = TRUE)
devtools::use_data(Daily_Cov, overwrite = TRUE)
library(DiversityOccupancy)
data("Daily_Cov")
head(Daily_Cov)
head(Daily_Cov)
Daily_Cov
summary(Daily_Cov)
library(DiversityOccupancy)
library("MuMIn", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
?clusterCall
??clusterCall
detach("package:MuMIn", unload=TRUE)
library(DiversityOccupancy)
detach("package:DiversityOccupancy", unload=TRUE)
library(DiversityOccupancy)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ Wind + Rain + Noise ~ Elev + RPR)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ Wind + Noise ~ Elev + RPR)
system.time batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13, dredge = TRUE, form = ~ Wind ~ Elev + RPR))
system.time(batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13, dredge = TRUE, form = ~ Wind ~ Elev + RPR))
system.time(batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13, dredge = TRUE, form = ~ Wind + Noise ~ Elev + RPR))
x<-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13, dredge = TRUE, form = ~ Wind + Noise ~ Elev + RPR)
x$models
x$models[[1]]
library(DiversityOccupancy)
system.time(batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13, dredge = TRUE, form = ~ Wind ~ Elev + RPR))
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ Wind + Rain + Noise ~ Elev + RPR + AgroFo + Wetland)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds[,-c(9:12)], sitecov = siteCov, obscov = Daily_Cov, spp = 12,
dredge = TRUE, form = ~ Wind + Rain + Noise ~ Elev + RPR + AgroFo + Wetland)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ Wind + Rain + Noise ~ Elev + RPR + AgroFo + Wetland)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ Wind + Rain + Noise ~ Elev)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ Wind ~ Elev)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ 1 ~ Elev)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ 1 ~ 1)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ 1 ~ elev)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ 1 ~ Elev)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ 1 ~ RPR)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ 1 ~ Wetland)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ 1 ~ Wetland + Elev)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ 1 ~ Wetland)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2), dredge = TRUE)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2), dredge = TRUE)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-batchoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2), dredge = TRUE)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-batchoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2), dredge = TRUE)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
system.time(batchoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2), dredge = TRUE))
summary(x$models[[1]])
summary(x$models[[5]])
library(DiversityOccupancy)
?batchoccu
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ Wind ~ Elev)
library(DiversityOccupancy)
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ Wind ~ Elev)
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ Wind ~ 1)
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ Wind ~ 1)$fit
batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = FALSE, form = ~ Wind ~ 1)$fit
summary(batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = FALSE, form = ~ Wind ~ 1)$fit)
summary(batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13,
dredge = TRUE, form = ~ Wind ~ Wetland)$fit)
data("siteCov")
View(siteCov)
data("sampling.cov")
View(sampling.cov)
names(sampling.cov)
names(sampling.cov[,1:9])
library(rgdal)
library(raster)
#read rasters
PNF<- readGDAL("~/new_bats/Rnew_bats/Bats_data_products/PNF.asc")
PNF<- raster(PNF)
riverdist <- readGDAL("~/new_bats/Rnew_bats/Bats_data_products/riverdist.asc")
Distance.to.water<-raster (riverdist)
roaddist <- readGDAL("~/new_bats/Rnew_bats/Bats_data_products/roaddist.asc")
Distance.to.road<-raster (roaddist)
Vegetation_existing <- readGDAL("~/new_bats/Rnew_bats/Bats_data_products/Vegetation_existing.asc")
Existing.vegetation <- raster(Vegetation_existing)
FireReturnAll <- readGDAL("~/new_bats/Rnew_bats/Bats_data_products/FireReturnAll.asc")
Fire.Interval<-raster (FireReturnAll)
topo <- readGDAL("~/new_bats/Rnew_bats/Bats_data_products/topo.asc")
topo <-raster (topo)
Altitude <-topo*PNF
bs <- readGDAL("~/new_bats/Rnew_bats/Bats_data_products/bs.asc")
Burn.intensity.soil<-raster (bs)
bc <- readGDAL("~/new_bats/Rnew_bats/Bats_data_products/bc.asc")
Burn.intensity.Canopy<-raster (bc)
bb <- readGDAL("~/new_bats/Rnew_bats/Bats_data_products/bb.asc")
Burn.intensity.basal<-raster (bb)
plumas.stack <- stack(Distance.to.water, Distance.to.road, Existing.vegetation, Fire.Interval, Altitude, Burn.intensity.soil, Burn.intensity.Canopy, Burn.intensity.basal)
names(plumas.stack) <- names(sampling.cov[,1:8])
library(rgdal)
library(raster)
PNF<- readGDAL("~/new_bats/Rnew_bats/Bats_data_products/PNF.asc")
PNF<- raster(PNF)
Dailycov3 <- read.csv("~/Documents/new_bats/Rnew_bats/Bats_data_products/Dailycov3.csv")
View(Dailycov3)
library(rgdal)
library(raster)
#read rasters
PNF<- readGDAL("~/Documents/new_bats/Rnew_bats/Bats_data_products/PNF.asc")
PNF<- raster(PNF)
riverdist <- readGDAL("~/Documents/new_bats/Rnew_bats/Bats_data_products/riverdist.asc")
Distance.to.water<-raster (riverdist)
roaddist <- readGDAL("~/Documents/new_bats/Rnew_bats/Bats_data_products/roaddist.asc")
Distance.to.road<-raster (roaddist)
Vegetation_existing <- readGDAL("~/Documents/new_bats/Rnew_bats/Bats_data_products/Vegetation_existing.asc")
Existing.vegetation <- raster(Vegetation_existing)
FireReturnAll <- readGDAL("~/Documents/new_bats/Rnew_bats/Bats_data_products/FireReturnAll.asc")
Fire.Interval<-raster (FireReturnAll)
topo <- readGDAL("~/Documents/new_bats/Rnew_bats/Bats_data_products/topo.asc")
topo <-raster (topo)
Altitude <-topo*PNF
bs <- readGDAL("~/Documents/new_bats/Rnew_bats/Bats_data_products/bs.asc")
Burn.intensity.soil<-raster (bs)
bc <- readGDAL("~/Documents/new_bats/Rnew_bats/Bats_data_products/bc.asc")
Burn.intensity.Canopy<-raster (bc)
bb <- readGDAL("~/Documents/new_bats/Rnew_bats/Bats_data_products/bb.asc")
Burn.intensity.basal<-raster (bb)
plumas.stack <- stack(Distance.to.water, Distance.to.road, Existing.vegetation, Fire.Interval, Altitude, Burn.intensity.soil, Burn.intensity.Canopy, Burn.intensity.basal)
names(plumas.stack) <- names(sampling.cov[,1:8])
plot(plumas.stack)
summary(plumas.stack)
summary(Burn.intensity.Canopy)
quantile(Burn.intensity.Canopy, 0.9)
quantile(Burn.intensity.Canopy, 0.5)
quantile(Altitude, 0.5)
quantile(Altitude, 0.9)
class(quantile(Altitude, 0.9))
quantile(plumas.stack, 0.9)
library(devtools)
devtools::use_data(plumas.stack, overwrite = TRUE)
quantile(plumas.stack, 0.75)
library(DiversityOccupancy)
data("plumas.stack")
plot(plumas.stack)
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov[,1:8], obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
y <- model.diversity(x, method = "g", squared = TRUE)
y$Best_model
diversity.raster <- predict(y$Best_model, plumas.stack)
y$Best_model
y$Best_model
class(y$Best_model)
x$models
x$models[[1]]
class(x$models[[1]])
predict(x$models[[1]], plumas.stack)
predict(x$models[[1]], plumas.stack, type = "state")
n<-predict(x$models[[1]], plumas.stack, type = "state")
n
plot(n)
plot(n)$predicted
plot(n$predicted)
n$predicted
n$@redicted
n$@predicted
names(n)
names(n$Predicted)
plot(n$Predicted)
n$Predicted
quantile(n$Predicted, 0.9)
quantile(n$Predicted, 0.98)
quantile(n$Predicted, 0.99)
quantile(n$Predicted, 0.999999)
quantile(n$Predicted, 0.9)
s<- predict(glm(y$Best_model, data=y$dataset), plumas.stack)
glm(y$Best_model, data = y$dataset)
glm.model <- glm(y$Best_model, data = y$dataset)
plot(predict(glm.model, plumas.stack))
predict(object = plumas.stack, model = glm.model)
glm.model <- glm(y$Best_model, data = y$dataset)
s<- predict(object = plumas.stack, model = glm.model)
plot(glm.model)
plot(s)
quantile(s, 0.9)
?reclassify
m <- c(0, 0.25, 1,  0.25, 0.5, 2,  0.5, 1, 3)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rclmat
m <- c(0, 0.25, NA,  0.25, 0.5, 1,  0.5, 1, 2)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc <- reclassify(plumas.stack, rclmat)
rc
plot(rc)
rc <- reclassify(plumas.stack, rclmat)
reclassify(plumas.stack, rcl = rclmat)
m <- c(-INF, 0.25, NA,  0.25, 0.5, 1,  0.5, INF, 2)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
m <- c(-inf, 0.25, NA,  0.25, 0.5, 1,  0.5, inf, 2)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
m <- c(-Inf, 0.25, NA,  0.25, 0.5, 1,  0.5, Inf, 2)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
reclassify(plumas.stack, rcl = rclmat)
rc <- reclassify(plumas.stack, rclmat)
plot(reclassify(plumas.stack, rcl = rclmat))
plot(rc)
unstack(plumas.stack)
b <- overlay(unstack(rc), fun=function(a,b,c,d,e,f,g,h){return(a*b*c*d*e*f*g*h)} )
b <- overlay(unstack(unlist(rc)), fun=function(a,b,c,d,e,f,g,h){return(a*b*c*d*e*f*g*h)} )
class(unstack(unlist(rc))
)
class(unlist((unstack(rc)))
)
class(unlist((unstack(rc))))
class(unlist((unstack(rc))))
?unlist
?prod
prod(rc)
plot(prod(rc))
x$models
length(x$models)
length(x$models)[T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F]
length(x$models)[[T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F]]
length(x$models)[[T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F]]
(x$models)[[T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F]]
(x$models)[T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F]
(x$models)[c(T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F)]
a<-c(T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F)
(x$models)[a]
predict.diversity<- function(model, diverse, new.data, quantile = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:lenth(models)){
layers <- predict(models[[i]], new.data, type = "state")$predicted
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
result <- list(species = layers, diversity.raster = diversity.raster)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
predict.diversity<- function(model, diverse, new.data, quantile = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers <- predict(models[[i]], new.data, type = "state")$predicted
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
result <- list(species = layers, diversity.raster = diversity.raster)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
x$models
x$models
x$models[[2]]
x$models[[3]]
x$models[[4]]
predict.diversity<- function(model, diverse, new.data, quantile = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers <- predict(models[[i]], new.data, type = "state")$predicted
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
result <- list(species = layers, diversity.raster = diversity.raster)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
a<-c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
predict.diversity<- function(model, diverse, new.data, quantile = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers[[i]] <- predict(models[[i]], new.data, type = "state")$predicted
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
result <- list(species = layers, diversity.raster = diversity.raster)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
x$models[[1]]
names(plumas.stack)
colnames(x$Covs)
names(plumas.stack)==colnames(x$Covs)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F))
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")$predicted
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- list(unstack(layers), diversity.raster)
for (i in 1:length(desition)){
nths <- quantile(desition[i], quantile.nth)
}
result <- list(species = layers, diversity.raster = diversity.raster)
return(result)
}
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")$predicted
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- list(unstack(layers), diversity.raster)
for (i in 1:length(desition)){
nths <- quantile(desition[i], quantile.nth)
}
result <- list(species = layers, diversity.raster = diversity.raster)
return(result)
}
