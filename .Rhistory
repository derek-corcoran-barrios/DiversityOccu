m <- c(-inf, 0.25, NA,  0.25, 0.5, 1,  0.5, inf, 2)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
m <- c(-Inf, 0.25, NA,  0.25, 0.5, 1,  0.5, Inf, 2)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
reclassify(plumas.stack, rcl = rclmat)
rc <- reclassify(plumas.stack, rclmat)
plot(reclassify(plumas.stack, rcl = rclmat))
plot(rc)
unstack(plumas.stack)
b <- overlay(unstack(rc), fun=function(a,b,c,d,e,f,g,h){return(a*b*c*d*e*f*g*h)} )
b <- overlay(unstack(unlist(rc)), fun=function(a,b,c,d,e,f,g,h){return(a*b*c*d*e*f*g*h)} )
class(unstack(unlist(rc))
)
class(unlist((unstack(rc)))
)
class(unlist((unstack(rc))))
class(unlist((unstack(rc))))
?unlist
?prod
prod(rc)
plot(prod(rc))
x$models
length(x$models)
length(x$models)[T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F]
length(x$models)[[T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F]]
length(x$models)[[T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F]]
(x$models)[[T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F]]
(x$models)[T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F]
(x$models)[c(T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F)]
a<-c(T,T,T,T,F,F,F,F,F,F,F,F,F,F,F,F,F)
(x$models)[a]
predict.diversity<- function(model, diverse, new.data, quantile = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:lenth(models)){
layers <- predict(models[[i]], new.data, type = "state")$predicted
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
result <- list(species = layers, diversity.raster = diversity.raster)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
predict.diversity<- function(model, diverse, new.data, quantile = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers <- predict(models[[i]], new.data, type = "state")$predicted
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
result <- list(species = layers, diversity.raster = diversity.raster)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
x$models
x$models
x$models[[2]]
x$models[[3]]
x$models[[4]]
predict.diversity<- function(model, diverse, new.data, quantile = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers <- predict(models[[i]], new.data, type = "state")$predicted
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
result <- list(species = layers, diversity.raster = diversity.raster)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
a<-c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
predict.diversity<- function(model, diverse, new.data, quantile = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers[[i]] <- predict(models[[i]], new.data, type = "state")$predicted
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
result <- list(species = layers, diversity.raster = diversity.raster)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = a)
x$models[[1]]
names(plumas.stack)
colnames(x$Covs)
names(plumas.stack)==colnames(x$Covs)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F))
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")$predicted
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- list(unstack(layers), diversity.raster)
for (i in 1:length(desition)){
nths <- quantile(desition[i], quantile.nth)
}
result <- list(species = layers, diversity.raster = diversity.raster)
return(result)
}
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")$predicted
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- list(unstack(layers), diversity.raster)
for (i in 1:length(desition)){
nths <- quantile(desition[i], quantile.nth)
}
result <- list(species = layers, diversity.raster = diversity.raster)
return(result)
}
predict.diversity2<- function(diverse, new.data, quantile.nth = 0.5) {
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
nths <- quantile(diversity.raster, quantile.nth)
m <- c(-Inf, nths, NA,  nths, Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc<-reclassify(new.data , rcl = rclmat)
result <- list(diversity.raster = diversity.raster, desition = rc)
return(result)
}
library("raster", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
z <- predict.diversity2(y, plumas.stack, quantile.nth = 0.8)
plot(z$diversity.raster)
plot(z$desition)
predict.diversity2<- function(diverse, new.data, quantile.nth = 0.5) {
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
nths <- quantile(diversity.raster, quantile.nth)
m <- c(-Inf, nths, NA,  nths, Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc<-reclassify(diversity.raster , rcl = rclmat)
result <- list(diversity.raster = diversity.raster, desition = rc)
return(result)
}
z <- predict.diversity2(y, plumas.stack, quantile.nth = 0.8)
plot(z$desition)
plot(z$desition, colNA = black)
plot(z$desition, colNA = "black")
plot(z$diversity.raster)
plot(z$desition, colNA = "black")
z <- predict.diversity2(y, plumas.stack, quantile.nth = 0.9)
plot(z$desition, colNA = "black")
z <- predict.diversity2(y, plumas.stack, quantile.nth = 0.9)
z <- predict.diversity2(y, plumas.stack, quantile.nth = 0.95)
plot(z$desition, colNA = "black")
y
x
x <- x
names(x)
models <- x$models[c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], plumas.stack, type = "state")$predicted
layers
}
models <- x$models[c(T,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
predict(models, plumas.stack, type = "state")$predicted
predict(unlist(models), plumas.stack, type = "state")$predicted
length(models)
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], plumas.stack, type = "state")
layers
}
layers
plot(layers)
plot(layers[[1]])
plot(layers[[1]]$predicted)
plot(layers[[1]])$predicted
(layers[[1]])$predicted
l;ayers
layers[[1]]
?subset
subset(layers, subset = 1)
subset(layers, subset = 1L)
subset(layers, 1)
subset(layers[[1]], 1)
plot(subset(layers[[1]], 1))
models <- x$models[c(T,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], plumas.stack, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
layers
plot(layers[[1]])
plot(layers[[2]])
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- list(unstack(layers), diversity.raster)
#for (i in 1:length(desition)){
# nths <- quantile(desition[i], quantile.nth)
#}
result <- list(species = layers, diversity.raster = diversity.raster, desition)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F))
plot(z$diversity.raster)
plot(z$species[[1]])
plot(z$species[[2]])
plot(z$``[[2]])
z$``
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- list(unstack(layers), diversity.raster)
#for (i in 1:length(desition)){
# nths <- quantile(desition[i], quantile.nth)
#}
result <- list(species = layers, diversity.raster = diversity.raster, desition = desition)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F))
z$desition
plot(z$desition[[1]])
z$desition[[1]]
class(z$desition[[1]])
class(z$desition[[2]])
plot(z$desition[[2]])
z$diversity.raster
plot(z$diversity.raster)
plot(z$species[[1]])
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- stack(unstack(layers), diversity.raster)
#for (i in 1:length(desition)){
# nths <- quantile(desition[i], quantile.nth)
#}
result <- list(species = layers, diversity.raster = diversity.raster, desition = desition)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F))
z$species
z$desition
plot(z$desition)
plot(z$diversity.raster)
?stack
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
#for (i in 1:length(desition)){
# nths <- quantile(desition[i], quantile.nth)
#}
result <- list(species = layers, diversity.raster = diversity.raster, desition = desition)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F))
z$desition
plot(z$desition)
library(raster)
plot(z$desition)
library(rasterVis)
plot3D(z$diversity.raster)
detach("package:rasterVis", unload=TRUE)
z$desition
quantile(z$desition)
quantile(z$desition, 0.9)
quantile(z$desition, 0.9)
p<- unstack(z$desition)
p
class(p)
predict.diversity2<- function(new.data, quantile.nth = 0.5) {
nths <- quantile(new.data, quantile.nth)
new.data <- unstack(new.data)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(new.data[[i]] , rcl = rclmat)
}
rc<- stack(unlist(rc))
priority.area <- prod(rc)
return(priority.area)
}
area<- predict.diversity2(new.data = z$desition, quantile.nth = 0.9)
area
plot(area)
plot(area, colNA = "black", legend = FALSE)
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
nths <- quantile(desition, quantile.nth)
desition <- unstack(desition)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(desition[[i]] , rcl = rclmat)
}
rc<- stack(unlist(rc))
priority.area <- prod(rc)
result <- list(species = layers, diversity.raster = diversity.raster, priority.area = priority.area)
return(result)
}
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
nths <- quantile(desition, quantile.nth)
desition <- unstack(desition)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(desition[[i]] , rcl = rclmat)
}
rc<- stack(unlist(rc))
priority.area <- prod(rc)
result <- list(species = layers, diversity.raster = diversity.raster, priority.area = priority.area)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0, species = c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F))
predict.diversity<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
nths <- quantile(desition, quantile.nth)
desition <- unstack(desition)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(desition[[i]] , rcl = rclmat)
}
rc<- stack(unlist(rc))
priority.area <- prod(rc)
result <- list(species = layers, diversity.raster = diversity.raster, priority.area = priority.area)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.95, species = c(T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F))
z$priority.area
plot(z$priority.area)
plot(z$priority.area, colNA="black")
plot(z$priority.area, colNA="black", legend = FALSE)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(T,F,F,F,T,F,T,F,F,F,F,F,F,F,F,F,F))
plot(z$priority.area, colNA="black", legend = FALSE)
nun <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F))
plot(nun$priority.area, colNA="black", legend = FALSE)
nun <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F))
?addLayer
addLayer
KML(z$priority.area, "priority", col = 'red', colNA= NA, overwrite = TRUE)
?KML
addLayer
KML
addLayer
library(DiversityOccupancy)
z
rm(predict.diversity())
rm(predict.diversity)
rm(predict.diversity2)
nun <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F))
library(DiversityOccupancy)
nun <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F))
a
nun <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = a)
?subset
library(DiversityOccupancy)
library(DiversityOccupancy)
nun <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = a)
predict.diversity2<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
nths <- quantile(desition, quantile.nth)
desition <- unstack(desition)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(desition[[i]] , rcl = rclmat)
}
predict.diversity2<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
nths <- quantile(desition, quantile.nth)
desition <- unstack(desition)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(desition[[i]] , rcl = rclmat)
}
library(unmarked)
library(raster)
predict.diversity2<- function(model, diverse, new.data, quantile.nth = 0.5 , species) {
models <- model$models[species]
layers <- list()
for (i in 1:length(models)){
layers [[i]] <- predict(models[[i]], new.data, type = "state")
layers [[i]] <- subset(layers[[i]], 1)
}
glm.model <- glm(diverse$Best_model, data = y$dataset)
diversity.raster<- predict(object = new.data, model = glm.model)
layers <- stack (unlist(layers))
desition <- addLayer(layers, diversity.raster)
nths <- quantile(desition, quantile.nth)
desition <- unstack(desition)
rc<-list()
for (i in 1:length(nths)){
m <- c(-Inf, nths[i], NA,  nths[i], Inf, 1)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rc[[i]]<-reclassify(desition[[i]] , rcl = rclmat)
}
rc<- stack(unlist(rc))
priority.area <- prod(rc)
plot(priority.area, colNA="black", legend = FALSE)
result <- list(species = layers, diversity.raster = diversity.raster, priority.area = priority.area)
return(result)
}
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(T,F,F,F,T,F,T,F,F,F,F,F,F,F,F,F,F))
z <- predict.diversity2(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(T,F,F,F,T,F,T,F,F,F,F,F,F,F,F,F,F))
library(DiversityOccupancy)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F))
library(DiversityOccupancy)
library(DiversityOccupancy)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F))
?subset
subset.raster
library(DiversityOccupancy)
library(DiversityOccupancy)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F))
?KML
library(DiversityOccupancy)
z <- predict.diversity(model = x, diverse = y, plumas.stack, quantile = 0.8, species = c(F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F))
