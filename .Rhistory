diversityoccu5<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
}
ncores<-detectCores()
ncores<-makeCluster(ncores - 1)
registerDoParallel(ncores)
foreach(i=1:length(secuencia))%dopar%{
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
stopCluster(ncores)
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
#dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
s<-diversityoccu5(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
library(unmarked)
diversityoccu5<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
}
ncores<-detectCores()
ncores<-makeCluster(ncores - 1)
registerDoParallel(ncores)
foreach(i=1:length(secuencia))%dopar%{
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
stopCluster(ncores)
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
#dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
s<-diversityoccu5(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
library(unmarked)
library(unmarked)
diversityoccu5<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
}
ncores<-detectCores()
ncores<-makeCluster(ncores - 1)
registerDoParallel(ncores)
foreach(i=1:length(secuencia))%dopar%{
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
stopCluster(ncores)
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
#dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
s<-diversityoccu5(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
detach("package:unmarked", unload=TRUE)
library("unmarked", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
?"foreach"
diversityoccu5<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
}
ncores<-detectCores()
ncores<-makeCluster(ncores - 1)
registerDoParallel(ncores)
foreach(i=1:length(secuencia), .packages = "unmarked")%dopar%{
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
stopCluster(ncores)
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
#dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
s<-diversityoccu5(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
library(unmarked)
library(MuMIn)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
library(doParallel)
library(parallel)
diversityoccu5<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
}
ncores<-detectCores()
ncores<-makeCluster(ncores - 1)
registerDoParallel(ncores)
foreach(i=1:length(secuencia), .packages = "unmarked")%dopar%{
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
stopCluster(ncores)
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
#dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
s<-diversityoccu5(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
diversityoccu5<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge = FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data<- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
models[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
}
ncores<-detectCores()
ncores<-makeCluster(ncores - 1)
registerDoParallel(ncores)
foreach(i=1:spp), .packages = "unmarked")%dopar%{
models[[i]] <- occuRN(form, models[[i]])
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
}
stopCluster(ncores)
}
else if (dredge == TRUE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
names(data)<- paste("data", c(1:length(data)), sep = ".")
models[[i]] <- occuRN(form, data[[i]])
models[[i]] <- dredge(models[[i]], data[[i]])
models[[i]] <- models[[i]][1,]
#dredged[[i]] <- get.models(models[[i]], subset=TRUE)[[1]]
#div[[i]] <- predict(dredged[[i]], type = "state", newdata = sitecov)$Predicted
#div<- as.data.frame(div)
}
}
result <- list(Covs = sitecov, models = models, dredged = dredged, data = data)
return(result)
}
s<-diversityoccu5(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
library(unmarked)
library(MuMIn)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
##################################################################################
##################################################################################
#######Function version 2
diversityoccu2<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge=FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data <- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
#data is a list of class unmarkedFrames from package unmarked
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
#uses the data list above to fit one model per specie
models[[i]] <- occuRN(form, data[[i]])
#uses de fited models above to predict the abundance in each site
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
colnames(div) = paste("species",c(1:ncol(div)), sep =".")
}
}
else if (dredge==TRUE) {
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
#data is a list of class unmarkedFrames from package unmarked.
# NM: write to the global environment so he data won't be "lost"
data2 <<- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
#uses the data list above to fit one model per specie
models[[i]] <- occuRN(form, data2)
#selects models
# NM: saved this to dredged object rather than overwriting models object
dredged[[i]] <- dredge(models[[i]], data2)
#select the first model
models[[i]] <- get.models(dredged[[i]], 1)[[1]]
#predictions for the best model
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
colnames(div) = paste("species",c(1:ncol(div)), sep =".")
data[[i]] <- data2
}
# remove temporary data file from the global environment
rm(data2, pos=".GlobalEnv")
}
result <- list(Covs = sitecov, models = models, Prediction = div, data=data)
return(result)
}
#when we run the model with dredge = FALSE, all runs smoothly
x<-diversityoccu2(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
#however, when the dredge is = TRUE, I have a problem
z <- diversityoccu2(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
z$models
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
z <- diversityoccu(pres = BatOccu[,1:6], sitecov = sampling.cov, obscov = Dailycov,spp = 2, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
z$Diversity
data("BatOccu")
data("Dailycov")
data("sampling.cov")
z <- diversityoccu(pres = BatOccu[,1:12], sitecov = sampling.cov, obscov = Dailycov,spp = 4, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
z$models
z$models[[1]]
z$models[[2]]
z$models[[1]]
z$models[[2]]
z$models[[3]]
z$models[[4]]
data("BatOccu")
data("Dailycov")
data("sampling.cov")
z <- diversityoccu(pres = BatOccu[,1:30], sitecov = sampling.cov, obscov = Dailycov,spp = 10, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
z$Diversity
hist(z$Diversity)
View(sampling.cov)
z <- diversityoccu(pres = BatOccu[,1:30], sitecov = sampling.cov, obscov = Dailycov,spp = 10, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy + Altitude + Distance.to.road, dredge = TRUE)
hist(z$Diversity)
z$Diversity
z$models
hist(z$Diversity)
library(DiversityOccupancy)
data("siteCov")
View(siteCov)
data("IslandBirds")
length(IslandBirds[,1])
class(siteCov)
colnames(siteCov)
Summary(siteCov)
summary(siteCov)
sum(siteCov$AgroFo, siteCov$SecVeg, siteCov$Wetland, siteCov$Upland)
rowsum(siteCov$AgroFo, siteCov$SecVeg, siteCov$Wetland, siteCov$Upland)
rowsum.data.frame(siteCov$AgroFo, siteCov$SecVeg, siteCov$Wetland, siteCov$Upland)
rowsum.data.frame(data.frame(siteCov$AgroFo, siteCov$SecVeg, siteCov$Wetland, siteCov$Upland))
rowsum.data.frame(data.frame(siteCov[,6:9])
)
rowsum.data.frame(siteCov[,6:9])
?rowsum.data.frame
?rowsum
?rowsum
rowSums(siteCov[,6:9])
summary(rowSums(siteCov[,6:9]))
data("Daily_Cov")
str(Daily_Cov)
names(Daily_Cov)
summary(Daily_Cov)
summary(Daily_Cov[[4]])
summary(Daily_Cov)
summary(Daily_Cov[[5]])
head(Daily_Cov[[5]])
names(Daily_Cov)
head(Daily_Cov[[2]])
head(Daily_Cov[[7]])
library(DiversityOccupancy)
View(IslandBirds)
x<-diversityoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13, dredge = TRUE, form = ~ Day + Wind + Obs + Time + Rain + Noise + Clouds ~ Elev + Patches + PD + DIVISION + RPR + AgroFo + SecVec + Wetland + Upland)
x<-diversityoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13, dredge = TRUE, form = ~ Day + Wind + Obs + Time + Rain + Noise + Clouds ~ Elev + Patches + PD + DIVISION + RPR + AgroFo + SecVeg + Wetland + Upland)
data("BatOccu")
z <- diversityoccu(pres = BatOccu[,1:30], sitecov = sampling.cov, obscov = Dailycov,spp = 10, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy + Altitude + Distance.to.road, dredge = TRUE)
diversityoccu2<- function(pres, sitecov, obscov, spp, form, index = "shannon", dredge=FALSE) {
secuencia <- c(1:spp)*(ncol(pres)/spp)
secuencia2<-secuencia-(secuencia[1]-1)
models <- list()
data <- list()
div <- list()
dredged <- list ()
if (dredge == FALSE){
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
#data is a list of class unmarkedFrames from package unmarked
data[[i]] <- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
#uses the data list above to fit one model per specie
models[[i]] <- occuRN(form, data[[i]])
#uses de fited models above to predict the abundance in each site
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
colnames(div) = paste("species",c(1:ncol(div)), sep =".")
}
}
else if (dredge==TRUE) {
for(i in 1:length(secuencia)) {
data[[i]] <-c(secuencia2[i]:secuencia[i])
data[[i]] <- pres[, data[[i]]]
#data is a list of class unmarkedFrames from package unmarked.
# NM: write to the global environment so he data won't be "lost"
data2 <<- unmarkedFrameOccu(y = data[[i]], siteCovs = sitecov, obsCovs = obscov)
#uses the data list above to fit one model per specie
models[[i]] <- occuRN(form, data2)
#selects models
# NM: saved this to dredged object rather than overwriting models object
dredged[[i]] <- dredge(models[[i]], data2)
#select the first model
models[[i]] <- get.models(dredged[[i]], 1)[[1]]
#predictions for the best model
div[[i]] <- predict(models[[i]], type = "state", newdata = sitecov)$Predicted
div<- as.data.frame(div)
colnames(div) = paste("species",c(1:ncol(div)), sep =".")
data[[i]] <- data2
}
# remove temporary data file from the global environment
rm(data2, pos=".GlobalEnv")
}
result <- list(Covs = sitecov, models = models, Prediction = div, data=data)
return(result)
}
z <- diversityoccu2(pres = BatOccu[,1:30], sitecov = sampling.cov, obscov = Dailycov,spp = 10, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy + Altitude + Distance.to.road, dredge = TRUE)
library(unmarked)
library(MuMIn)
z <- diversityoccu2(pres = BatOccu[,1:30], sitecov = sampling.cov, obscov = Dailycov,spp = 10, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy + Altitude + Distance.to.road, dredge = TRUE)
z <- diversityoccu2(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy + Altitude + Distance.to.road, dredge = TRUE)
z
z$Prediction
z <- diversityoccu(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy + Altitude + Distance.to.road, dredge = TRUE)
x<-diversityoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13, dredge = TRUE, form = ~ Day + Wind + Obs + Time + Rain + Noise + Clouds ~ Elev + Patches + PD + DIVISION + RPR + AgroFo + SecVeg + Wetland + Upland)
detach("package:MuMIn", unload=TRUE)
z <- diversityoccu(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy + Altitude + Distance.to.road, dredge = TRUE)
library(DiversityOccupancy)
z <- diversityoccu(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy + Altitude, dredge = TRUE)
rm(z)
library(DiversityOccupancy)
z <- diversityoccu(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
library(DiversityOccupancy)
z <- diversityoccu(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
z <- diversityoccu(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
library(DiversityOccupancy)
z <- diversityoccu(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
rm(z)
x<-diversityoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 13, dredge = TRUE, form = ~ Day + Wind + Obs + Time + Rain + Noise + Clouds ~ Elev + Patches + PD + DIVISION + RPR + AgroFo + SecVeg + Wetland + Upland)
x<-diversityoccu(pres = IslandBirds[1:8,], sitecov = siteCov, obscov = Daily_Cov, spp = 13, dredge = TRUE, form = ~ Day + Wind + Obs + Time + Rain + Noise + Clouds ~ Elev + Patches + PD + DIVISION + RPR + AgroFo + SecVeg + Wetland + Upland)
x<-diversityoccu(pres = IslandBirds[1:8,], sitecov = siteCov, obscov = Daily_Cov, spp = 13, dredge = TRUE, form = ~ Day + Wind + Obs + Time + Rain + Noise + Clouds ~ Elev + Patches + PD + DIVISION + RPR + AgroFo + SecVeg + Wetland + Upland)
library(DiversityOccupancy)
library(DiversityOccupancy)
z <- diversityoccu(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
z <- diversityoccu(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
library(DiversityOccupancy)
z <- diversityoccu(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = FALSE)
z <- diversityoccu(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
detach("package:unmarked", unload=TRUE)
detach("package:MuMIn", unload=TRUE)
library(DiversityOccupancy)
z <- diversityoccu(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Julian + Meanhum ~Burn.intensity.soil + Burn.intensity.Canopy, dredge = TRUE)
pairs(siteCov)
?pairs
panel.hist <- function(x, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
pairs(siteCov, panel = panel.smooth,
cex = 1.5, pch = 24, bg = "light blue",
diag.panel = panel.hist, cex.labels = 2, font.labels = 2)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(siteCov, lower.panel = panel.smooth, upper.panel = panel.cor)
x<-diversityoccu(pres = IslandBirds[,1:8], sitecov = siteCov, obscov = Daily_Cov, spp = 2, dredge = TRUE, form = ~ Day + Wind + Obs + Time + Rain + Noise + Clouds ~ Elev + RPR + AgroFo + SecVeg + Wetland + Upland)
?dredge
x<-diversityoccu(pres = IslandBirds[,1:8], sitecov = siteCov, obscov = Daily_Cov, spp = 2, dredge = TRUE, form = ~ Wind + Time + Rain + Noise + Clouds ~ Elev + RPR + AgroFo + SecVeg + Wetland + Upland)
library(DiversityOccupancy)
data("mtcars")
?mtcars
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
?DDaily_Cov
?mtcars
?Daily_Cov
?"MuMIn"
library(DiversityOccupancy)
?diversityoccu
?"MuMIn"
library(DiversityOccupancy)
