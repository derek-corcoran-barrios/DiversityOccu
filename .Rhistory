B
toString(B)
str_replace_all(B,"[[:punct:]]"," ")
?gsub
gsub(",", B, " ")
gsub(",", B, " ", fixed= TRUE)
gsub(",", B, " ")
gsub("([ab])", "\\1_\\1_", "abc and ABC")
gsub(",", " ", B)
B <-paste(names(a$Covs), "+")
B <- toString(B)
B <- gsub(",", " ", B)
B <- paste("Diversity ~", B, collapse = " ")
B <- as.formula(substr(B, 1, nchar(B)-1))
B
?glm
?diversityoccu
library(DiversityOccupancy)
?model.diversity
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))
y<-model.diversity(x)
X
x
x$Diversity
y<-model.diversity(x)
x
y<-model.diversity(x)
A <- cbind(x$Diversity, x$Covs)
B <- paste(names(x$Covs), "+")
B <- toString(B)
B <- gsub(",", " ", B)
B <- paste("Diversity ~", B, collapse = " ")
B <- as.formula(substr(B, 1, nchar(B)-1))
B <- glm(B, data = A)
C <- glmulti(B, level = 1, crit = "aicc", confsetsize = 5, plotty = FALSE)
A
colnames(A)
colnames(A[,1])<-"Diversity"
colnames(A[1])<-Diversity
colnames(A[1])<-"Diversity"
colnames(A)
colnames(A[1])<-"Diversity"
A
summary(A)
colnames(A[1])<-"Diversity"
a<-colnames(A[1])<-"Diversity"
a
colnames(A[1])<-"Diversity"
colnames(A)
colnames(A)[1]<-"Diversity"
colnames(A)
library(DiversityOccupancy)
y<-model.diversity(x)
library(DiversityOccupancy)
library(DiversityOccupancy)
y<-model.diversity(x)
y
names(y)
y@formulas
y@formulas[[1]]
library(DiversityOccupancy)
y
model.diversity(x)
library(DiversityOccupancy)
y<-model.diversity(x)
y
names(y)
y$Table
y<-model.diversity(x)
names(y)
y$Table
class(y$Table)
library(knitr)
kable(y$Table)
?kable
y$Best_model
A <- cbind(DivOcc$Diversity, DivOcc$Covs)
colnames(A)[1]<-"Diversity"
A
str(A)
glm(y$Best_model, data = A)
d<-glm(y$Best_model, data = A)
d
summary(d)
class(summary(d))
name(d)
names(d)
y$Best_model
summary(d)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
y<-model.diversity(x)
y<-model.diversity(x, method = "g")
glmulti
glm
library(DiversityOccupancy)
y<-model.diversity(x, method = "g")
y<-model.diversity(x)
library(DiversityOccupancy)
y<-model.diversity(x)
y
names(y)
y$coeff
y$coeff
y$Table
y$Best_model
y<-model.diversity(x)
library(DiversityOccupancy)
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))
model.diversity(x)
x
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))
library("unmarked", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
?predict
?"predict-methods"
"predict-methods"
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))
detach("package:unmarked", unload=TRUE)
library(DiversityOccupancy)
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))
model.diversity(x)
y
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))
data("BatOccu")
data("Dailycov")
data("sampling.cov")
\
data("BatOccu")
data("Dailycov")
data("sampling.cov")
View(BatOccu)
View(Dailycov)
View(sampling.cov)
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))
X
x
names(x)
x$Diversity
x$models
y <- model.diversity(x)
names(y)
y$Best_model
y$Table
y$coeff
names(x)
x$models
x$Diversity
y <- model.diversity(x)
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))
y<- model.diversity(x, method = "g")
y
names(y)
y$Table
class(y$Table)
y$Table
y$Table[,1]
class(y$Table[,1])
class(as.formula(as.character(y$Table[,1]))
)
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))
y<- model.diversity(x, method = "g", confsetsize = 6)
y
y$Table
y$Table[,1]
y$Table[,2]
y$Table[,2]-y$Table[,2]
y$Table[,2]-y$Table[-1,2]
y$Table[-1,2]-y$Table[,2]
DF(cbind, y$Table[-1,2], y$Table[,2])
DF<-cbind(y$Table[-1,2], y$Table[,2])
View(DF)
y$Table[,2]-y$Table[1,1]
y$Table[1,1]
y$Table[,2]-y$Table[1,2]
y$Table[,2]-y$Table[1,2]
y$Table[,2]-y$Table[1,2]
library(DiversityOccupancy)
y<- model.diversity(x, method = "g", confsetsize = 6)
y$Table
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~  Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2), index = "simpson")
y<- model.diversity(x, method = "g", confsetsize = 6)
y$Table
y$Coef
4$oeff
y$coeff
library(DiversityOccupancy)
?diversityoccu
?model.diversity
library(DiversityOccupancy)
?model.diversity
data("BatOccu")
data("Dailycov")
data("sampling.cov")
x <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,
spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~
Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy +
I(Burn.intensity.Canopy^2) + Burn.intensity.basal +
I(Burn.intensity.basal^2))
y <- model.diversity(x, method = "g")
y$Table
y
y$Table
names(x)
x$models
x$models[[1]]
y$Best_model
class(y)
class(y$Best_model)
predict(y$Best_model, newdata = sampling.cov)
?predict
y$Best_model
glm(y$Best_model)
x
x$Diversity
glm(y$Best_model, data= cbind(x$Diversity,sampling.cov))
glm(y$Best_model, data= cbind(x$Diversity,sampling.cov))
library(DiversityOccupancy)
y <- model.diversity(x, method = "g")
y$Table
y$dataset
glm(y$Best_model, data= y$dataset
)
predict(glm(y$Best_model, data= y$dataset), newdata = y$dataset)
predict(glm(y$Best_model, data= y$dataset), newdata = y$dataset)
predict(glm(y$Best_model, data= y$dataset), newdata = y$dataset, se.fit = TRUE)
names(predict(glm(y$Best_model, data= y$dataset), newdata = y$dataset, se.fit = TRUE))
names(predict(glm(y$Best_model, data= y$dataset), newdata = y$dataset, se.fit = TRUE))[[1]]
predict(glm(y$Best_model, data= y$dataset), newdata = y$dataset, se.fit = TRUE)[[1]]
predict(glm(y$Best_model, data= y$dataset), newdata = y$dataset, se.fit = TRUE)[[2]]
predict(glm(y$Best_model, data= y$dataset), newdata = y$dataset, se.fit = TRUE)[[1]]
predict(glm(y$Best_model, data= y$dataset), newdata = y$dataset, se.fit = TRUE)[[2]]
sampling.cov
mean(sampling.cov)
colMeans(sampling.cov)
rep(colMeans(sampling.cov), times=length(sampling.cov[,1])
)
rep(colMeans(sampling.cov), times=length(sampling.cov[,1]))
a<-rep(colMeans(sampling.cov), times=length(sampling.cov[,1]))
class(a)
length(sampling.cov[,1])
?matrix
a<-matrix(rep(colMeans(sampling.cov), times=length(sampling.cov[,1])), nrow = length(sampling.cov[,1]), ncol = ncol(sampling.cov))
a
rep?
dgdasg
?rep
a<-matrix(rep(colMeans(sampling.cov), each=length(sampling.cov[,1])), nrow = length(sampling.cov[,1]), ncol = ncol(sampling.cov))
a
View(a)
a<-data.frame(matrix(rep(colMeans(sampling.cov), each=length(sampling.cov[,1])), nrow = length(sampling.cov[,1]), ncol = ncol(sampling.cov)))
colnames(a)<-colnames(sampling.cov)
min(y$dataset)
summary(y$dataset)
names(summary(a))
names(summary(y$dataset))
summary(y$dataset)
summary(y$dataset)$min
summary(y$dataset)@min
class(y$dataset)
(y$dataset[6,])
(y$dataset[1,])
length(y$dataset[,1])
length(summary(y$dataset[,1]))
(summary(y$dataset[,1])
)
y$dataset[6,]
y$dataset[1,]
summary(y$dataset[1,])
(y$dataset[6,])
summary(y$dataset)
summary(y$dataset)[1,]
class(summary(y$dataset)[1,])
class(summary(y$dataset)[1,])
summary(y$dataset)[1,]
class(summary(y$dataset))
str(summary(y$dataset))
class(table)
table
as.numeric(summary(y$dataset)[1,])
summary(y$dataset)[1,]
apply(sampling.cov,2,min)
apply(sampling.cov,2,max)
class(apply(sampling.cov,2,max))
maxval<-apply(sampling.cov,2,max)
maxval
maxval$Basal.Area
names(maxval)
maxval@Basal.Area
maxval[6]
maxval[6]*4
maxval[6]
maxval$names
maxval$name
summary(maxval)
colnames(a)
colnames(a)=="Altitude"
maxval[colnames(a)=="Altitude"]
?seq
rm(a)
rm(b)
y
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
maxval<-apply(model$dataset,2,max)
minval<-apply(model$dataset,2,min)
newdata<- seq(from = minval[colnames(a)== as.character(variable)], to = minval[colnames(a)== as.character(variable)], along.with = model$dataset[,1])
a$variable <- newdata
b<-predict(glm(model$Best_model, data= model$dataset), newdata = a, se.fit = TRUE)
result <-list(newdata= a, prediction = b)
return(result)
}
responce.plot(y, Altitude)
responce.plot(y, Altitude)
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
}
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
}
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
return(a)}
responce.plot(y, Altitude)
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
return(a)}
responce.plot(y, Altitude)
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
maxval<-apply(model$dataset,2,max)
minval<-apply(model$dataset,2,min)result <-list(newdata= a, prediction = minval)
return(result)
}
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
maxval<-apply(model$dataset,2,max)
minval<-apply(model$dataset,2,min)  result <-list(newdata= a, prediction = minval)
return(result)
}
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
maxval<-apply(model$dataset,2,max)
minval<-apply(model$dataset,2,min)
result <-list(newdata= a, prediction = maxval)
return(result)
}
responce.plot(y, Altitude)
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
maxval<-apply(model$dataset,2,max)
minval<-apply(model$dataset,2,min)
result <-list(newdata= a, prediction = maxval, variable = as.character(variable))
return(result)
}
responce.plot(y, Altitude)
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
maxval<-apply(model$dataset,2,max)
minval<-apply(model$dataset,2,min)
result <-list(newdata= a, prediction = maxval, variable = as.character(variable))
return(result)
}
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
maxval<-apply(model$dataset,2,max)
minval<-apply(model$dataset,2,min)
result <-list(newdata= a, prediction = maxval, variable = as.character(variable))
return(result)
}
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
maxval<-apply(model$dataset,2,max)
minval<-apply(model$dataset,2,min)
c<- as.character(variable)
result <-list(newdata= a, prediction = maxval, variable = c)
return(result)
}
responce.plot(y, Altitude)
responce.plot(y, variable = Altitude)
sample(c(1,2,3),1)
sample(c(1,2,3),1)
bla <- function(a, b){
c<-paste(as.character(a), as.character(b))
return(c)
}
bla(hello, bitch)
bla(a, b)
bla <- function(a, b){
c<-as.character(a)
return(c)
}
bla(hello)
as.character(hello)
as.character(as.factor(hello))
as.character("hello")
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
maxval<-apply(model$dataset,2,max)
minval<-apply(model$dataset,2,min)
c<- as.character("variable")
result <-list(newdata= a, prediction = maxval, variable = c)
return(result)
}
bla <- function(a, b){
c<-as.character(a)
return(c)
}
bla <- function(a){
c<-as.character(a)
return(c)
}
bla <- function(a){
c<-as.character("a")
return(c)
}
bla(hello)
responce.plot(y, variable = Altitude)
responce.plot(y, variable = Altitude)
bla <- function(a){
c<-as.character("a")
return(c)
}
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
maxval<-apply(model$dataset,2,max)
minval<-apply(model$dataset,2,min)
c<- as.character("variable")
result <-list(newdata= a, prediction = maxval, variable = c)
return(result)
}
responce.plot(y, variable = Altitude)
?substitute
substiture)altitude
substiture(altitude)
substitute(altitude)
as.character(substitute(altitude))
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
maxval<-apply(model$dataset,2,max)
minval<-apply(model$dataset,2,min)
c<- as.character(substitute(variable))
result <-list(newdata= a, prediction = maxval, variable = c)
return(result)
}
responce.plot(y, variable = Altitude)
responce.plot<- function(model, variable){
a<-data.frame(matrix(rep(colMeans(model$dataset), each=length(model$dataset[,1])), nrow = length(model$dataset[,1]), ncol = ncol(model$dataset)))
colnames(a)<-colnames(model$dataset)
maxval<-apply(model$dataset,2,max)
minval<-apply(model$dataset,2,min)
newdata<- seq(from = minval[colnames(a)== as.character(substitute(variable))], to = minval[colnames(a)== as.character(substitute(variable))], along.with = model$dataset[,1])
a$variable <- newdata
b<-predict(glm(model$Best_model, data= model$dataset), newdata = a, se.fit = TRUE)
result <-list(newdata= a, prediction = b)
return(result)
}
responce.plot(y, variable = Altitude)
