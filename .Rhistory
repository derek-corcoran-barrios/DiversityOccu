Means <- model2$model %>% mutate_if(is.factor, as.character) %>% mutate_if(is.numeric, mean) %>% group_by_if(is.character) %>% summarise_if(is.numeric, mean) %>% ungroup()
Means <- Means[rep(seq_len(nrow(Means)), each = 20),]  %>% arrange_if(is.character) %>% group_split(am)
MinMax <- Model$model %>% select(wt) %>% pull(wt) %>% range()
MinMax <- seq(from = MinMax[1], to = MinMax[2], length.out =  = 20)
for(i in 1:length(Means)){
Means[[i]]$wt <- MinMax
}
Means <- bind_rows(Means)
Means$Predicted <- predict(model2, Means)
Means <- model2$model %>% mutate_if(is.factor, as.character) %>% mutate_if(is.numeric, mean) %>% group_by_if(is.character) %>% summarise_if(is.numeric, mean) %>% ungroup()
Means <- Means[rep(seq_len(nrow(Means)), each = 20),]  %>% arrange_if(is.character) %>% group_split(am)
MinMax <- model2$model %>% select(wt) %>% pull(wt) %>% range()
MinMax <- seq(from = MinMax[1], to = MinMax[2], length.out =  = 20)
MinMax <- model2$model %>% select(wt) %>% pull(wt) %>% range()
MinMax
MinMax <- seq(from = MinMax[1], to = MinMax[2], length.out = 20)
for(i in 1:length(Means)){
Means[[i]]$wt <- MinMax
}
Means <- bind_rows(Means)
Means$Predicted <- predict(model2, Means)
Means
Means$SE <- predict(model2, Means, se.fit = T)$se.fit
Means
ggplot(Means, aes(x = wt, y = Predicted)) + geom_ribbon(aes(ymax = Predicted + SE, ymin = Predicted - SE, fill = am)) + geom_line(aes(fill = am))
ggplot(Means, aes(x = wt, y = Predicted)) + geom_ribbon(aes(ymax = Predicted + SE, ymin = Predicted - SE, fill = am)) + geom_line(aes(color = am)) + theme_classic()
ggplot(Means, aes(x = wt, y = Predicted)) + geom_ribbon(aes(ymax = Predicted + SE, ymin = Predicted - SE, fill = am)) + geom_line(aes(group = am)) + theme_classic()
ggplot(Means, aes(x = wt, y = Predicted)) + geom_ribbon(aes(ymax = Predicted + SE, ymin = Predicted - SE, fill = am), alpha = 0.5) + geom_line(aes(color = am)) + theme_classic()
Means <- model2$model %>% mutate_if(is.factor, as.character) %>% mutate_if(is.numeric, mean) %>% group_by_if(is.character) %>% summarise_if(is.numeric, mean) %>% ungroup()
Means <- Means[rep(seq_len(nrow(Means)), each = 20),]  %>% arrange_if(is.character) %>% group_split(am)
Means <- bind_rows(Means)
Means$Predicted <- predict(model2, Means)
Means$SE <- predict(model2, Means, se.fit = T)$se.fit
ggplot(Means, aes(x = am, y = Predicted)) + geom_boxplot() + theme_classic()
ggplot(Means, aes(x = am, y = Predicted)) + geom_errorbar(aes(ymin = Predicted - SE, ymax = Predicted + SE)) + geom_point() + theme_classic()
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_news()
usethis::use_travis()
usethis::use_travis()
usethis::use_travis()
usethis::use_travis()
pkgdown::build_site()
pkgdown::build_site()
?usethis::use_travis()
usethis::use_badge()
?usethis::use_badge()
usethis::use_cran_badge()
usethis::use_lifecycle_badge()
usethis::use_lifecycle_badge(stage = "Stable")
?usethis::use_badge()
usethis::use_badge()
pkgdown::build_site()
usethis::use_lifecycle_badge(stage = "Stable")
usethis::use_cran_badge()
usethis::use_lifecycle_badge(stage = "Stable")
pkgdown::build_site()
usethis::use_gitlab_ci()
usethis::use_gitlab_ci()
?usethis::use_gitlab_ci()
usethis::use_travis()
usethis::use_travis()
usethis::use_travis()
usethis::use_travis()
usethis::use_travis()
usethis::use_travis()
library(DiversityOccupancy)
pkgdown::build_site()
library(tidyverse)
library(DiversityOccupancy)
Spp <- readRDS("/home/derek/Documents/DataYuryi/data_reg6sp.rds")
OccuCov <- readRDS("/home/derek/Documents/DataYuryi/Occdata_ocu.rds")
DetCov <- readRDS("/home/derek/Documents/DataYuryi/Occdata_det.rds")
#Test <- batchoccu(pres = Spp, sitecov = OccuCov, obscov = DetCov, spp = 6, form =~ Temperatura + Humedad + Presencia_perros ~AMBIENTE + CobVeg + Distancia_rio + Distancia_Costa , dredge = T, SppNames = c("Aguilucho", "Blanquillo", "Chercan", "Chincol", "Churrete_Chico", "Churrete_comun"))
Test2 <- batchoccu(pres = Spp, sitecov = OccuCov, obscov = DetCov, spp = 6, form =~ Temperatura ~AMBIENTE + CobVeg + Distancia_Costa , dredge = F, SppNames = c("Aguilucho", "Blanquillo", "Chercan", "Chincol", "Churrete_Chico", "Churrete_comun"))
batch = Test2
spp = 1
variable = "Distancia_Costa"
batch = Test2
spp = 1
variable = "Distancia_Costa"
?dplyr::first()
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim()
Vars
Categoricals <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% select_if(is.character) %>% colnames()
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim()
Categoricals <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% select_if(is.character) %>% colnames()
A <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% mutate_if(is.character, first) %>% mutate_if(is.numeric, mean) %>% group_by_if(is.character) %>% summarise_if(is.numeric, mean) %>% ungroup()
A <- A[rep(seq_len(nrow(A)), each = 20), ]  %>% arrange_if(is.character) %>% group_split(quo(Categoricals))
A <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% mutate_if(is.character, first) %>% mutate_if(is.numeric, mean) %>% group_by_if(is.character) %>% summarise_if(is.numeric, mean) %>% ungroup()
A <- A[rep(seq_len(nrow(A)), each = 20), ]  %>% arrange_if(is.character)
View(A)
Categoricals
(variable)
(variable %in% Categoricals)
MinMax <- batch$Covs %>% select(variable) %>% summarise_if(is.numeric, .f = c(min, max)) %>% distinct()
MinMax
MinMax <- batch$Covs %>% select(variable) %>% summarise_if(is.numeric, .f = c(min, max)) %>% distinct()
newdata <- seq(from = minval[colnames(A) == as.character(substitute(variable))],
to = maxval[colnames(A) == as.character(substitute(variable))],
along.with = batch$Covs[, 1])
maxval <- apply(batch$Covs, 2, max)
MinMax <- batch$Covs %>% select(variable) %>% summarise_if(is.numeric, .f = c(min, max)) %>% distinct()
newdata <- seq(from = MinMax[1],
to = MinMax[2],
along.with = A[, 1])
MinMax <- batch$Covs %>% select(variable) %>% summarise_if(is.numeric, .f = c(min, max)) %>% distinct()
MinMax[1]
MinMax[2]
seq(from = MinMax[1],
to = MinMax[2],
along.with = A[,1])
MinMax[!]
MinMax[1]
A
class(A)
newdata <- seq(from = MinMax[1],
to = MinMax[2],
length.out =  = nrow(A))
newdata <- seq(from = MinMax[1],
to = MinMax[2],
length.out = nrow(A))
seq(from = MinMax[1],
to = MinMax[2],
length.out = nrow(A))
class(MinMax)
class(MinMax[1])
class(MinMax[,1])
newdata <- seq(from = MinMax[,1],
to = MinMax[,2],
length.out = nrow(A))
newdata
A[colnames(A) == substitute(variable)] <- newdata
A
A[colnames(A) == variable]
A[colnames(A) == variable] <- newdata
A
B <- predict(batch$models[[spp]], type = "state", newdata = A)
library(tidyverse)
library(DiversityOccupancy)
Spp <- readRDS("/home/derek/Documents/DataYuryi/data_reg6sp.rds")
OccuCov <- readRDS("/home/derek/Documents/DataYuryi/Occdata_ocu.rds")
DetCov <- readRDS("/home/derek/Documents/DataYuryi/Occdata_det.rds")
#Test <- batchoccu(pres = Spp, sitecov = OccuCov, obscov = DetCov, spp = 6, form =~ Temperatura + Humedad + Presencia_perros ~AMBIENTE + CobVeg + Distancia_rio + Distancia_Costa , dredge = T, SppNames = c("Aguilucho", "Blanquillo", "Chercan", "Chincol", "Churrete_Chico", "Churrete_comun"))
Test2 <- batchoccu(pres = Spp, sitecov = OccuCov, obscov = DetCov, spp = 6, form =~ Temperatura ~AMBIENTE + CobVeg + Distancia_Costa , dredge = F, SppNames = c("Aguilucho", "Blanquillo", "Chercan", "Chincol", "Churrete_Chico", "Churrete_comun"))
batch = Test2
spp = 1
variable = "Distancia_Costa"
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim()
Categoricals <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% select_if(is.character) %>% colnames()
A <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% mutate_if(is.character, first) %>% mutate_if(is.numeric, mean) %>% group_by_if(is.character) %>% summarise_if(is.numeric, mean) %>% ungroup()
A <- A[rep(seq_len(nrow(A)), each = 20), ]  %>% arrange_if(is.character)
MinMax <- batch$Covs %>% select(variable) %>% summarise_if(is.numeric, .f = c(min, max)) %>% distinct()
newdata <- seq(from = MinMax[,1],
to = MinMax[,2],
length.out = nrow(A))
A[colnames(A) == variable] <- newdata
batch$models[[spp]]
predict(batch$models[[spp]], type = "state", newdata = A)
class(A)
B <- predict(batch$models[[spp]], type = "state", newdata = as.data.frame(A))
B
predict(batch$models[[spp]], type = "state", newdata = as.data.frame(A))
A
class(A)
batch$Covs$AMBIENTE
A$AMBIENTE[2] <- "ROCA INTERVENIDA"
A
A %>% expand()
A %>% expand_grid()
A
A$AMBIENTE[2] <- "ROCA INTERVENIDA"
A
A$AMBIENTE[2] <- "PLAYA INTERVENIDA"
A
A %>% expand_grid()
A %>% expand()
A %>% expand_grid()
?expand_grid
predict(batch$models[[spp]], type = "state", newdata = as.data.frame(A))
A$AMBIENTE
install.packages("badger")
badger::badge_cran_download("NetworkExtinction", "grand-total", "blue")
badger::badge_cran_download("NetworkExtinction", "grand-total", "blue")
?badger::badge_cran_download
badger::badge_cran_download("NetworkExtinction", "last-month")
predict(batch$models[[spp]], batch$Covs)
predict(batch$models[[spp]], batch$Covs, type = "state")
batch$models[[spp]]
A
class(A)
class(as.data.frame(A))
predict(batch$models[[spp]], batch$Covs, type = "state")
predict(batch$models[[spp]], as.data.frame(A), type = "state")
?`predict,unmarkedFit-method`
predict(batch$models[[spp]], as.data.frame(A), type = "state")
?system.file
install.packages("hexSticker")
?hexSticker::sticker()
library(tidyverse)
library(DiversityOccupancy)
Spp <- readRDS("/home/derek/Documents/DataYuryi/data_reg6sp.rds")
OccuCov <- readRDS("/home/derek/Documents/DataYuryi/Occdata_ocu.rds")
DetCov <- readRDS("/home/derek/Documents/DataYuryi/Occdata_det.rds")
Test <- batchoccu(pres = Spp, sitecov = OccuCov, obscov = DetCov, spp = 6, form =~ Temperatura + Humedad + Presencia_perros ~AMBIENTE + CobVeg + Distancia_rio + Distancia_Costa , dredge = T, SppNames = c("Aguilucho", "Blanquillo", "Chercan", "Chincol", "Churrete_Chico", "Churrete_comun"))
batch = Test
spp = 1
variable = "Distancia_Costa"
Test$models[[1]]
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim()
Categoricals <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% select_if(is.character) %>% colnames()
A <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% mutate_if(is.character, first) %>% mutate_if(is.numeric, mean) %>% group_by_if(is.character) %>% summarise_if(is.numeric, mean) %>% ungroup()
A <- A[rep(seq_len(nrow(A)), each = 20), ]  %>% arrange_if(is.character)
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim()
Vars
Categoricals <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% select_if(is.character) %>% colnames()
batch$Covs %>% select(Vars)
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim()
Vars
Vars %>% str_remove_all("1")
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim()
str_trim()
Vars
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim() %>% str_remove_all("1")
Vars
str_count(Vars)
Vars[str_count(Vars != 0)]
Vars[str_count(Vars) != 0]
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim() %>% str_remove_all("1")
Vars <- Vars[str_count(Vars) != 0]
Categoricals <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% select_if(is.character) %>% colnames()
A <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% mutate_if(is.character, first) %>% mutate_if(is.numeric, mean) %>% group_by_if(is.character) %>% summarise_if(is.numeric, mean) %>% ungroup()
A <- A[rep(seq_len(nrow(A)), each = 20), ]  %>% arrange_if(is.character)
A
MinMax <- batch$Covs %>% select(variable) %>% summarise_if(is.numeric, .f = c(min, max)) %>% distinct()
newdata <- seq(from = MinMax[,1],
to = MinMax[,2],
length.out = nrow(A))
A[colnames(A) == variable] <- newdata
A
B <- predict(batch$models[[spp]], type = "state", newdata = as.data.frame(A))
B
DF <- data.frame(preditction = B$Predicted, upper = (B$Predicted +
B$SE), lower = (B$Predicted - B$SE), dependent = A[colnames(A) ==
as.character(substitute(variable))])
result <- ggplot(DF, aes(x = DF[, 4], y = DF[, 1])) + geom_ribbon(aes(ymax = upper,
ymin = lower), fill = "grey") + geom_line() + theme_bw() +
theme(axis.line = element_line(colour = "black"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_blank(),
panel.background = element_blank()) + labs(x = as.character(substitute(variable)),
y = "Occupancy") + ylim(c(min(c(DF$lower, 0)), max(c(DF$upper,
1))))
return(result)
result
DF
View(DF)
newdata
result <- ggplot(DF, aes(x = DF[, 4], y = DF[, 1])) + geom_ribbon(aes(ymax = upper,
ymin = lower), fill = "grey") + geom_line() + theme_bw() +
theme_classic()  + labs(x = as.character(substitute(variable)),y = "Occupancy") + ylim(c(min(c(DF$lower, 0)), max(c(DF$upper,
1))))
result
DF
View(DF)
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim() %>% str_remove_all("1")
Vars <- Vars[str_count(Vars) != 0]
Categoricals <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% select_if(is.character) %>% colnames()
A <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% mutate_if(is.character, first) %>% mutate_if(is.numeric, mean) %>% group_by_if(is.character) %>% summarise_if(is.numeric, mean) %>% ungroup()
A <- A[rep(seq_len(nrow(A)), each = 20), ]  %>% arrange_if(is.character)
MinMax <- batch$Covs %>% select(variable) %>% summarise_if(is.numeric, .f = c(min, max)) %>% distinct()
newdata <- seq(from = MinMax[,1],
to = MinMax[,2],
length.out = nrow(A))
A[colnames(A) == variable] <- newdata
B <- predict(batch$models[[spp]], type = "state", newdata = as.data.frame(A))
DF <- data.frame(preditction = B$Predicted, upper = (B$Predicted + B$SE), lower = (B$Predicted - B$SE), dependent = newdata)
DF
View(DF)
ggplot(DF, aes(x = dependent, y = Predicted)) + geom_ribbon(aes(ymax = upper,ymin = lower), fill = "grey")
colnames(DF)
ggplot(DF, aes(x = dependent, y = Predicted)) + geom_ribbon(aes(ymax = upper,ymin = lower), fill = "grey")
ggplot(DF, aes(x = dependent, y = prediction)) + geom_ribbon(aes(ymax = upper,ymin = lower), fill = "grey") + geom_line() + theme_classic() + labs(x = as.character(substitute(variable)),y = "Occupancy") + ylim(c(min(c(DF$lower, 0)), max(c(DF$upper, 1))))
DF
colnames(DF)
DF <- data.frame(prediction = B$Predicted, upper = (B$Predicted + B$SE), lower = (B$Predicted - B$SE), dependent = newdata)
result <- ggplot(DF, aes(x = dependent, y = prediction)) + geom_ribbon(aes(ymax = upper,ymin = lower), fill = "grey") + geom_line() + theme_classic() + labs(x = as.character(substitute(variable)),y = "Occupancy") + ylim(c(min(c(DF$lower, 0)), max(c(DF$upper, 1))))
result
library(tidyverse)
library(DiversityOccupancy)
Spp <- readRDS("/home/derek/Documents/DataYuryi/data_reg6sp.rds")
OccuCov <- readRDS("/home/derek/Documents/DataYuryi/Occdata_ocu.rds")
DetCov <- readRDS("/home/derek/Documents/DataYuryi/Occdata_det.rds")
Test <- batchoccu(pres = Spp, sitecov = OccuCov, obscov = DetCov, spp = 6, form =~ Temperatura + Humedad + Presencia_perros ~AMBIENTE + CobVeg + Distancia_rio + Distancia_Costa , dredge = T, SppNames = c("Aguilucho", "Blanquillo", "Chercan", "Chincol", "Churrete_Chico", "Churrete_comun"))
test_plot <- function (batch, spp, variable)
{
upper <- lower <- NULL
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim() %>% str_remove_all("1")
Vars <- Vars[str_count(Vars) != 0]
Categoricals <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% select_if(is.character) %>% colnames()
A <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% mutate_if(is.character, first) %>% mutate_if(is.numeric, mean) %>% group_by_if(is.character) %>% summarise_if(is.numeric, mean) %>% ungroup()
A <- A[rep(seq_len(nrow(A)), each = 20), ]  %>% arrange_if(is.character)
MinMax <- batch$Covs %>% select(variable) %>% summarise_if(is.numeric, .f = c(min, max)) %>% distinct()
newdata <- seq(from = MinMax[,1],
to = MinMax[,2],
length.out = nrow(A))
A[colnames(A) == variable] <- newdata
B <- predict(batch$models[[spp]], type = "state", newdata = as.data.frame(A))
DF <- data.frame(prediction = B$Predicted, upper = (B$Predicted + B$SE), lower = (B$Predicted - B$SE), dependent = newdata)
result <- ggplot(DF, aes(x = dependent, y = prediction)) + geom_ribbon(aes(ymax = upper,ymin = lower), fill = "grey") + geom_line() + theme_classic() + labs(x = as.character(substitute(variable)),y = "Occupancy") + ylim(c(min(c(DF$lower, 0)), max(c(DF$upper, 1))))
return(result)
}
test_plot(batch = Test, spp = 1, variable = "Distancia_Costa")
Test$models
test_plot <- function (batch, spp, variable)
{
upper <- lower <- NULL
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim() %>% str_remove_all("1")
Vars <- Vars[str_count(Vars) != 0]
Categoricals <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% select_if(is.character) %>% colnames()
A <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% mutate_if(is.character, first) %>% mutate_if(is.numeric, mean) %>% group_by_if(is.character) %>% summarise_if(is.numeric, mean) %>% ungroup()
A <- A[rep(seq_len(nrow(A)), each = 20), ]  %>% arrange_if(is.character)
MinMax <- batch$Covs %>% select(variable) %>% summarise_if(is.numeric, .f = c(min, max)) %>% distinct()
newdata <- seq(from = MinMax[,1],
to = MinMax[,2],
length.out = nrow(A))
A[colnames(A) == variable] <- newdata
B <- predict(batch$models[[spp]], type = "state", newdata = as.data.frame(A))
DF <- data.frame(prediction = B$Predicted, upper = (B$Predicted + B$SE), lower = (B$Predicted - B$SE), dependent = newdata)
result <- ggplot(DF, aes(x = dependent, y = prediction)) + geom_ribbon(aes(ymax = upper,ymin = lower), fill = "grey") + geom_line() + theme_classic() + labs(x = variable,y = "Occupancy") + ylim(c(min(c(DF$lower, 0)), max(c(DF$upper, 1))))
return(result)
}
test_plot(batch = Test, spp = 1, variable = "Distancia_Costa")
library(tidyverse)
library(DiversityOccupancy)
Spp <- readRDS("/home/derek/Documents/DataYuryi/data_reg6sp.rds")
OccuCov <- readRDS("/home/derek/Documents/DataYuryi/Occdata_ocu.rds")
DetCov <- readRDS("/home/derek/Documents/DataYuryi/Occdata_det.rds")
Test <- batchoccu(pres = Spp, sitecov = OccuCov, obscov = DetCov, spp = 6, form =~ Temperatura + Humedad + Presencia_perros ~AMBIENTE + CobVeg + Distancia_rio + Distancia_Costa , dredge = T, SppNames = c("Aguilucho", "Blanquillo", "Chercan", "Chincol", "Churrete_Chico", "Churrete_comun"))
test_plot <- function (batch, spp, variable)
{
upper <- lower <- NULL
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim() %>% str_remove_all("1")
Vars <- Vars[str_count(Vars) != 0]
Categoricals <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% select_if(is.character) %>% colnames()
A <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% mutate_if(is.character, first) %>% mutate_if(is.numeric, mean) %>% group_by_if(is.character) %>% summarise_if(is.numeric, mean) %>% ungroup()
A <- A[rep(seq_len(nrow(A)), each = 20), ]  %>% arrange_if(is.character)
MinMax <- batch$Covs %>% select(variable) %>% summarise_if(is.numeric, .f = c(min, max)) %>% distinct()
newdata <- seq(from = MinMax[,1],
to = MinMax[,2],
length.out = nrow(A))
A[colnames(A) == variable] <- newdata
B <- predict(batch$models[[spp]], type = "state", newdata = as.data.frame(A))
DF <- data.frame(prediction = B$Predicted, upper = (B$Predicted + B$SE), lower = (B$Predicted - B$SE), dependent = newdata)
result <- ggplot(DF, aes(x = dependent, y = prediction)) + geom_ribbon(aes(ymax = upper,ymin = lower), fill = "grey") + geom_line() + theme_classic() + labs(x = variable,y = "Occupancy") + ylim(c(min(c(DF$lower, 0)), max(c(DF$upper, 1))))
return(result)
}
test_plot(batch = Test, spp = 1, variable = "Distancia_Costa")
Test$models
test_plot(batch = Test, spp = 2, variable = "CobVeg")
library(tidyverse)
library(DiversityOccupancy)
Spp <- readRDS("/home/derek/Documents/DataYuryi/data_reg6sp.rds")
OccuCov <- readRDS("/home/derek/Documents/DataYuryi/Occdata_ocu.rds")
DetCov <- readRDS("/home/derek/Documents/DataYuryi/Occdata_det.rds")
Test <- batchoccu(pres = Spp, sitecov = OccuCov, obscov = DetCov, spp = 6, form =~ Temperatura + Humedad + Presencia_perros ~AMBIENTE + CobVeg + Distancia_rio + Distancia_Costa , dredge = T, SppNames = c("Aguilucho", "Blanquillo", "Chercan", "Chincol", "Churrete_Chico", "Churrete_comun"))
test_plot <- function (batch, spp, variable)
{
upper <- lower <- NULL
Vars <- batch$models[[spp]]@formula %>% str_split(pattern = "~", simplify = T) %>% .[3] %>% str_split(pattern = "\\+", simplify = T) %>% as.character() %>% str_trim() %>% str_remove_all("1")
Vars <- Vars[str_count(Vars) != 0]
Categoricals <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% select_if(is.character) %>% colnames()
A <- batch$Covs %>% select(Vars)  %>% mutate_if(is.factor, as.character) %>% mutate_if(is.character, first) %>% mutate_if(is.numeric, mean) %>% group_by_if(is.character) %>% summarise_if(is.numeric, mean) %>% ungroup()
A <- A[rep(seq_len(nrow(A)), each = 20), ]  %>% arrange_if(is.character)
MinMax <- batch$Covs %>% select(variable) %>% summarise_if(is.numeric, .f = c(min, max)) %>% distinct()
newdata <- seq(from = MinMax[,1],
to = MinMax[,2],
length.out = nrow(A))
A[colnames(A) == variable] <- newdata
B <- predict(batch$models[[spp]], type = "state", newdata = as.data.frame(A))
DF <- data.frame(prediction = B$Predicted, upper = (B$Predicted + B$SE), lower = (B$Predicted - B$SE), dependent = newdata)
result <- ggplot(DF, aes(x = dependent, y = prediction)) + geom_ribbon(aes(ymax = upper,ymin = lower), fill = "grey") + geom_line() + theme_classic() + labs(x = variable,y = "Occupancy") + ylim(c(min(c(DF$lower, 0)), max(c(DF$upper, 1))))
return(result)
}
names(Test$models)
test_plot(batch = Test, spp = 1, variable = "Distancia_Costa")
test_plot(batch = Test, spp = 2, variable = "CobVeg")
g <- test_plot(batch = Test, spp = 2, variable = "CobVeg")
g + ggtitle("Chercan")
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
pkgdown::build_news()
pkgdown::build_site()
pkgdow::build_news()
pkgdown::build_news()
?pkgdown::build_news()
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
library(DiversityOccupancy)
?responseplot.occu
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov =
Daily_Cov, spp = 5, form = ~ Day + Wind + Rime + Noise + Clouds ~
Elev + AgroFo + SecVec + Wetland)
#plot the response of occupancy to individual variables for species 4 and 5
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = Elev)
BirdOccupancy$models
BirdOccupancy$Covs
BirdOccupancy$models
BirdOccupancy$fit
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov =
Daily_Cov, spp = 5, form = ~ Day + Wind + Rime + Noise + Clouds ~
Elev + AgroFo + SecVec + Wetland, SppNames = letters[1:5])
#plot the response of occupancy to individual variables for species 4 and 5
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = Elev)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov =Daily_Cov, spp =  5, form = ~ Day + Wind + Rain + Noise + Clouds ~Elev + AgroFo + SecVec + Wetland)
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov =Daily_Cov, spp =  5, form = ~ Day  ~Elev )
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov =Daily_Cov, spp =  5, form = ~ 1  ~Elev )
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov =Daily_Cov, spp =  5, form = ~ 1  ~Elev , SppNames = letters[1:5])
BirdOccupancy$models
BirdOccupancy$models$a
BirdOccupancy$models$b
BirdOccupancy$models$c
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = Elev)
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = Elev)
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov =Daily_Cov, spp =  5, form = ~ Day  ~Elev )
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov =Daily_Cov, spp =  5, form = ~ Day + Wind + Rain + Noise + Clouds  ~Elev )
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev")
library(DiversityOccupancy)
library(DiversityOccupancy)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov =Daily_Cov, spp =  5, form = ~ Day + Wind + Rain + Noise + Clouds  ~Elev )
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev")
library(DiversityOccupancy)
library(DiversityOccupancy)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov =Daily_Cov, spp =  5, form = ~ Day + Wind + Rain + Noise + Clouds  ~Elev )
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev")
library(DiversityOccupancy)
library(DiversityOccupancy)
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov =Daily_Cov, spp =  5, form = ~ Day + Wind + Rain + Noise + Clouds  ~Elev )
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 1, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 2, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 3, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 5, variable = "Elev")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov =
Daily_Cov, spp =  5, form = ~ Day + Wind + Rain + Noise + Clouds ~
Elev + AgroFo + SecVec + Wetland)
responseplot.occu(batch = BirdOccupancy, spp = 5, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 3, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 2, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 1, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 3, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev")
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev", N = 100)
library(DiversityOccupancy)
library(DiversityOccupancy)
?responseplot.occu
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov =
Daily_Cov, spp = 5, form = ~ Day + Wind + Rime + Noise + Clouds ~
Elev + AgroFo + SecVec + Wetland)
#plot the response of occupancy to individual variables for species 4 and 5
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev")
BirdOccupancy$models
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 5, form = ~ Day + Wind + Rime + Noise + Clouds ~Elev + AgroFo + SecVec + Wetland)
#plot the response of occupancy to individual variables for species 4 and 5
responseplot.occu(batch = BirdOccupancy, spp = 4, variable = "Elev")
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 5, form = ~ Day + Wind + Rime + Noise + Clouds ~Elev + AgroFo + SecVec + Wetland, SppNames = c("a", "b", "c", "d"))
?IslandBirds
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 5, form = ~ Day + Wind + Rime + Noise + Clouds ~Elev + AgroFo + SecVec + Wetland, SppNames = c("a", "b", "c", "d", "e"))
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
BirdOccupancy <-batchoccu(pres = IslandBirds, sitecov = siteCov, obscov = Daily_Cov, spp = 5, form = ~ Day + Wind + Rime + Noise + Clouds ~Elev + AgroFo + SecVec + Wetland, SppNames = c("a", "b", "c", "d", "e"))
?obsCovs
?Daily_Cov
